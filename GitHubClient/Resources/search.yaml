openapi: 3.1.0
info:
  title: GitHub v3 REST API
  description: GitHub's v3 REST API.
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  version: 1.1.4
  x-github-plan: api.github.com
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
tags:
- name: actions
  description: Endpoints to manage GitHub Actions using the REST API.
- name: activity
  description: Activity APIs provide access to notifications, subscriptions, and timelines.
- name: apps
  description: Information for integrations and installations.
- name: billing
  description: Monitor charges and usage from Actions and Packages.
- name: checks
  description: Rich interactions with checks run by your integrations.
- name: code-scanning
  description: Retrieve code scanning alerts from a repository.
- name: codes-of-conduct
  description: Insight into codes of conduct for your communities.
- name: emojis
  description: List emojis available to use on GitHub.
- name: dependabot
  description: Endpoints to manage Dependabot.
- name: dependency-graph
  description: Endpoints to access Dependency Graph features.
- name: gists
  description: View, modify your gists.
- name: git
  description: Raw Git functionality.
- name: gitignore
  description: View gitignore templates
- name: issues
  description: Interact with GitHub Issues.
- name: licenses
  description: View various OSS licenses.
- name: markdown
  description: Render GitHub flavored markdown
- name: merge-queue
  description: Interact with GitHub Merge Queues.
- name: meta
  description: Endpoints that give information about the API.
- name: migrations
  description: Move projects to or from GitHub.
- name: oidc
  description: Endpoints to manage GitHub OIDC configuration using the REST API.
- name: orgs
  description: Interact with GitHub Orgs.
- name: packages
  description: Manage packages for authenticated users and organizations.
- name: projects
  description: Interact with GitHub Projects.
- name: pulls
  description: Interact with GitHub Pull Requests.
- name: rate-limit
  description: Check your current rate limit status
- name: reactions
  description: Interact with reactions to various GitHub entities.
- name: repos
  description: Interact with GitHub Repos.
- name: search
  description: Look for stuff on GitHub.
- name: secret-scanning
  description: Retrieve secret scanning alerts from a repository.
- name: teams
  description: Interact with GitHub Teams.
- name: users
  description: Interact with and view information about users and also current user.
- name: codespaces
  description: Endpoints to manage Codespaces using the REST API.
- name: copilot
  description: Endpoints to manage Copilot using the REST API.
- name: security-advisories
  description: Manage security advisories.
- name: interactions
  description: Owner or admin management of users interactions.
- name: classroom
  description: Interact with GitHub Classroom.
- name: desktop
  description: Desktop specific endpoints.
- name: enterprise-teams
  description: Endpoints to manage GitHub Enterprise Teams.
- name: code-security
  description: Endpoints to manage Code security using the REST API.
- name: private-registries
  description: Manage private registry configurations.
servers:
- url: https://api.github.com
paths:
  /search/repositories:
    get:
      tags:
      - search
      summary: Search repositories
      description: 'Find repositories via various criteria. This method returns up
        to 100 results [per page](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api).


        When searching for repositories, you can get text match metadata for the **name**
        and **description** fields when you pass the `text-match` media type. For
        more details about how to receive highlighted search results, see [Text match
        metadata](https://docs.github.com/rest/search/search#text-match-metadata).


        For example, if you want to search for popular Tetris repositories written
        in assembly code, your query might look like this:


        `q=tetris+language:assembly&sort=stars&order=desc`


        This query searches for repositories with the word `tetris` in the name, the
        description, or the README. The results are limited to repositories where
        the primary language is assembly. The results are sorted by stars in descending
        order, so that the most popular repositories appear first in the search results.'
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/search/search#search-repositories
      operationId: search/repos
      parameters:
      - name: q
        in: query
        required: true
        schema:
          type: string
        description: The query contains one or more search keywords and qualifiers.
          Qualifiers allow you to limit your search to specific areas of GitHub. The
          REST API supports the same qualifiers as the web interface for GitHub. To
          learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/search/search#constructing-a-search-query).
          See "[Searching for repositories](https://docs.github.com/articles/searching-for-repositories/)"
          for a detailed list of qualifiers.
      - name: sort
        in: query
        schema:
          type: string
          enum:
          - stars
          - forks
          - help-wanted-issues
          - updated
        description: 'Sorts the results of your query by number of `stars`, `forks`,
          or `help-wanted-issues` or how recently the items were `updated`. Default:
          [best match](https://docs.github.com/rest/search/search#ranking-search-results)'
      - $ref: '#/components/parameters/order'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        200:
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/repo-search-result-item'
                    minItems: 0
                    uniqueItems: false
                required:
                - total_count
                - incomplete_results
                - items
                minProperties: 3
              examples:
                default:
                  $ref: '#/components/examples/repo-search-result-item-paginated'
        503:
          $ref: '#/components/responses/service_unavailable'
        422:
          $ref: '#/components/responses/validation_failed'
        304:
          $ref: '#/components/responses/not_modified'
      x-github:
        githubCloudOnly: false
        category: search
        subcategory: search
        enabledForGitHubApps: true
x-webhooks:
  issues-edited:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        name: User-Agent
        in: header
        schema:
          type: string
      - example: 12312312
        name: X-Github-Hook-Id
        in: header
        schema:
          type: string
      - example: issues
        name: X-Github-Event
        in: header
        schema:
          type: string
      - example: 123123
        name: X-Github-Hook-Installation-Target-Id
        in: header
        schema:
          type: string
      - in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        in: header
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        in: header
        schema:
          type: string
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      description: The title or body on an issue was edited.
      x-github:
        category: webhooks
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/edited
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-edited'
        required: true
  merge-group-destroyed:
    post:
      operationId: merge-group/destroyed
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#merge_group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-merge-group-destroyed'
        required: true
      tags:
      - merge-queue
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        name: User-Agent
        in: header
      - schema:
          type: string
        example: 12312312
        name: X-Github-Hook-Id
        in: header
      - schema:
          type: string
        example: issues
        name: X-Github-Event
        in: header
      - schema:
          type: string
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
        in: header
      - in: header
        example: repository
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        in: header
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        in: header
      x-github:
        category: webhooks
        subcategory: merge_group
        supported-webhook-types:
        - app
        githubCloudOnly: false
      description: 'The merge queue groups pull requests together to be merged. This
        event indicates that one of those merge groups was destroyed. This happens
        when a pull request is removed from the queue: any group containing that pull
        request is also destroyed.


        When you receive this event, you may want to cancel any checks that are running
        on the head SHA to avoid wasting computing resources on a merge group that
        will not be used.'
      summary: 'This event occurs when there is activity relating to a merge group
        in a merge queue. For more information, see "[Managing a merge queue](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Merge queues" repository permission.'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  projects-v2-status-update-edited:
    post:
      operationId: projects-v2-status-update/edited
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2_status_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-status-update-edited'
        required: true
      parameters:
      - name: User-Agent
        schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
      - name: X-Github-Hook-Id
        schema:
          type: string
        example: 12312312
        in: header
      - name: X-Github-Event
        schema:
          type: string
        example: project-v2-status-update
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        example: 123123
        in: header
      - example: repository
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
      - name: X-Hub-Signature-256
        schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
      x-github:
        category: webhooks
        subcategory: projects_v2_status_update
        enabledForGitHubApps: true
        githubCloudOnly: false
        supported-webhook-types:
        - organization
      description: A status update was edited on a project in the organization.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a status update
        on an organization-level project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."


        For activity relating to a project, use the `projects_v2` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > To share feedback about projects webhooks with GitHub, see the [Projects
        webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
  branch-protection-configuration-enabled:
    post:
      operationId: branch-protection-configuration/enabled
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-branch-protection-configuration-enabled'
        required: true
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#branch_protection_configuration
      parameters:
      - name: User-Agent
        in: header
        schema:
          type: string
        example: GitHub-Hookshot/123abc
      - name: X-Github-Hook-Id
        in: header
        schema:
          type: string
        example: 12312312
      - name: X-Github-Event
        in: header
        schema:
          type: string
        example: issues
      - name: X-Github-Hook-Installation-Target-Id
        in: header
        schema:
          type: string
        example: 123123
      - example: repository
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        in: header
        schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - name: X-Hub-Signature-256
        in: header
        schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      x-github:
        category: webhooks
        subcategory: branch_protection_configuration
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
      description: All branch protections were enabled for a repository.
      summary: 'This event occurs when there is a change to branch protection configurations
        for a repository.

        For more information, see "[About protected branches](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches)."

        For information about using the APIs to manage branch protection rules, see
        "[Branch protection rule](https://docs.github.com/graphql/reference/objects#branchprotectionrule)"
        in the GraphQL documentation or "[Branch protection](https://docs.github.com/rest/branches/branch-protection)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" repository permission.'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  projects-v2-item-archived:
    post:
      operationId: projects-v2-item/archived
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-archived'
        required: true
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2_item
      parameters:
      - example: GitHub-Hookshot/123abc
        name: User-Agent
        in: header
        schema:
          type: string
      - example: 12312312
        name: X-Github-Hook-Id
        in: header
        schema:
          type: string
      - example: project-v2-item
        name: X-Github-Event
        in: header
        schema:
          type: string
      - example: 123123
        name: X-Github-Hook-Installation-Target-Id
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        in: header
        example: repository
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        in: header
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        in: header
        schema:
          type: string
      x-github:
        subcategory: projects_v2_item
        enabledForGitHubApps: true
        category: webhooks
        githubCloudOnly: false
        supported-webhook-types:
        - organization
      description: An item on an organization project was archived. For more information,
        see "[Archiving items from your project](https://docs.github.com/issues/planning-and-tracking-with-projects/managing-items-in-your-project/archiving-items-from-your-project)."
      summary: 'This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project), use
        the `projects_v2` event. For activity relating to Projects (classic), use
        the `project`, `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  team-add:
    post:
      operationId: team-add
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#team_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-add'
        required: true
      parameters:
      - example: GitHub-Hookshot/123abc
        name: User-Agent
        in: header
        schema:
          type: string
      - example: 12312312
        name: X-Github-Hook-Id
        in: header
        schema:
          type: string
      - example: issues
        name: X-Github-Event
        in: header
        schema:
          type: string
      - example: 123123
        name: X-Github-Hook-Installation-Target-Id
        in: header
        schema:
          type: string
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        in: header
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        in: header
        schema:
          type: string
      x-github:
        category: webhooks
        subcategory: team_add
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
      summary: 'This event occurs when a team is added to a repository.

        For more information, see "[Managing teams and people with access to your
        repository](https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/managing-teams-and-people-with-access-to-your-repository)."


        For activity relating to teams, see the `teams` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  member-removed:
    post:
      operationId: member/removed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-member-removed'
        required: true
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#member
      parameters:
      - name: User-Agent
        schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
      - name: X-Github-Hook-Id
        schema:
          type: string
        in: header
        example: 12312312
      - name: X-Github-Event
        schema:
          type: string
        in: header
        example: issues
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        in: header
        example: repository
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
        name: X-Hub-Signature-256
      x-github:
        subcategory: member
        category: webhooks
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
        githubCloudOnly: false
      summary: 'This event occurs when there is activity relating to collaborators
        in a repository. For more information, see "[Adding outside collaborators
        to repositories in your organization](https://docs.github.com/organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization)."
        For more information about the API to manage repository collaborators, see
        [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#repositorycollaboratorconnection)
        or "[Collaborators](https://docs.github.com/rest/collaborators/collaborators)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A collaborator was removed from a repository.
  issues-closed:
    post:
      operationId: issues/closed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-closed'
        required: true
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
        name: User-Agent
      - example: 12312312
        in: header
        schema:
          type: string
        name: X-Github-Hook-Id
      - example: issues
        in: header
        schema:
          type: string
        name: X-Github-Event
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
        name: X-Hub-Signature-256
      x-github:
        category: webhooks
        subcategory: issues
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
        - app
      description: An issue was closed.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
  deploy-key-deleted:
    post:
      operationId: deploy-key/deleted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deploy-key-deleted'
        required: true
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#deploy_key
      parameters:
      - name: User-Agent
        schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
      - name: X-Github-Hook-Id
        schema:
          type: string
        in: header
        example: 12312312
      - name: X-Github-Event
        example: issues
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        in: header
        example: 123123
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - name: X-Hub-Signature-256
        schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      x-github:
        subcategory: deploy_key
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
      summary: 'This event occurs when there is activity relating to deploy keys.
        For more information, see "[Managing deploy keys](https://docs.github.com/developers/overview/managing-deploy-keys)."
        For information about the APIs to manage deploy keys, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#deploykey)
        or "[Deploy keys](https://docs.github.com/rest/deploy-keys)" in the REST API
        documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Deployments" repository permission.'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A deploy key was deleted.
  pull-request-unlabeled:
    post:
      operationId: pull-request/unlabeled
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-unlabeled'
        required: true
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      parameters:
      - example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
        name: User-Agent
      - example: 12312312
        schema:
          type: string
        in: header
        name: X-Github-Hook-Id
      - example: issues
        in: header
        schema:
          type: string
        name: X-Github-Event
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
        name: X-Hub-Signature-256
      x-github:
        category: webhooks
        subcategory: pull_request
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
        - app
      description: A label was removed from a pull request.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
  sponsorship-pending-cancellation:
    post:
      operationId: sponsorship/pending-cancellation
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#sponsorship
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-pending-cancellation'
        required: true
      parameters:
      - name: User-Agent
        schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
      - name: X-Github-Hook-Id
        schema:
          type: string
        in: header
        example: 12312312
      - name: X-Github-Event
        example: issues
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        in: header
        schema:
          type: string
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
      x-github:
        subcategory: sponsorship
        category: webhooks
        supported-webhook-types:
        - sponsors_listing
        githubCloudOnly: false
      summary: 'This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub Sponsors](https://docs.github.com/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more information,
        see "[Configuring webhooks for events in your sponsored account](https://docs.github.com/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: 'A sponsor scheduled a cancellation for their sponsorship. The
        cancellation will become effective on their next billing date.


        This event is only sent when a recurring (monthly) sponsorship is cancelled;
        it is not sent for one-time sponsorships.'
  marketplace-purchase-pending-change:
    post:
      operationId: marketplace-purchase/pending-change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-marketplace-purchase-pending-change'
        required: true
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#marketplace_purchase
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
        name: User-Agent
      - example: 12312312
        in: header
        schema:
          type: string
        name: X-Github-Hook-Id
      - example: issues
        in: header
        schema:
          type: string
        name: X-Github-Event
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
        name: X-Hub-Signature-256
      x-github:
        category: webhooks
        subcategory: marketplace_purchase
        githubCloudOnly: false
        supported-webhook-types:
        - marketplace
      summary: This event occurs when there is activity relating to a GitHub Marketplace
        purchase. For more information, see "[GitHub Marketplace](https://docs.github.com/marketplace)."
        For information about the APIs to manage GitHub Marketplace listings, see
        [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#marketplacelisting)
        or "[GitHub Marketplace](https://docs.github.com/rest/apps/marketplace)" in
        the REST API documentation.
      description: Someone downgraded or cancelled a GitHub Marketplace plan. The
        new plan or cancellation will take effect at the end of the current billing
        cycle. When the change takes effect, the `changed` or `cancelled` event will
        be sent.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  release-prereleased:
    post:
      operationId: release/prereleased
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#release
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-prereleased'
        required: true
      parameters:
      - name: User-Agent
        schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
      - name: X-Github-Hook-Id
        schema:
          type: string
        example: 12312312
        in: header
      - name: X-Github-Event
        schema:
          type: string
        in: header
        example: issues
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        example: 123123
        in: header
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
      - name: X-Hub-Signature-256
        schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
      x-github:
        subcategory: release
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
      description: A release was created and identified as a pre-release. A pre-release
        is a release that is not ready for production and may be unstable.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to releases. For
        more information, see "[About releases](https://docs.github.com/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#release)
        or "[Releases](https://docs.github.com/rest/releases)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
  marketplace-purchase-purchased:
    post:
      operationId: marketplace-purchase/purchased
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-marketplace-purchase-purchased'
        required: true
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#marketplace_purchase
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
        name: User-Agent
      - example: 12312312
        in: header
        schema:
          type: string
        name: X-Github-Hook-Id
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - example: 123123
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
        name: X-Hub-Signature-256
      x-github:
        category: webhooks
        subcategory: marketplace_purchase
        githubCloudOnly: false
        supported-webhook-types:
        - marketplace
      summary: This event occurs when there is activity relating to a GitHub Marketplace
        purchase. For more information, see "[GitHub Marketplace](https://docs.github.com/marketplace)."
        For information about the APIs to manage GitHub Marketplace listings, see
        [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#marketplacelisting)
        or "[GitHub Marketplace](https://docs.github.com/rest/apps/marketplace)" in
        the REST API documentation.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: Someone purchased a GitHub Marketplace plan. The change will take
        effect on the account immediately.
  discussion-category-changed:
    post:
      operationId: discussion/category-changed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-category-changed'
        required: true
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Id
        example: 12312312
        in: header
        schema:
          type: string
      - name: X-Github-Event
        example: issues
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        in: header
        example: 123123
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - name: X-Hub-Signature-256
        schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      x-github:
        subcategory: discussion
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      description: The category of a discussion was changed.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  release-edited:
    post:
      operationId: release/edited
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#release
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-edited'
        required: true
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
        name: User-Agent
      - example: 12312312
        in: header
        schema:
          type: string
        name: X-Github-Hook-Id
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
        name: X-Hub-Signature-256
      x-github:
        category: webhooks
        subcategory: release
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
        - app
      summary: 'This event occurs when there is activity relating to releases. For
        more information, see "[About releases](https://docs.github.com/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#release)
        or "[Releases](https://docs.github.com/rest/releases)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: The details of a release, pre-release, or draft release were edited.
        For more information, see "[Managing releases in a repository](https://docs.github.com/repositories/releasing-projects-on-github/managing-releases-in-a-repository#editing-a-release)."
  dependabot-alert-reintroduced:
    post:
      operationId: dependabot-alert/reintroduced
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-reintroduced'
        required: true
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#dependabot_alert
      parameters:
      - name: User-Agent
        schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
      - name: X-Github-Hook-Id
        schema:
          type: string
        in: header
        example: 12312312
      - name: X-Github-Event
        schema:
          type: string
        in: header
        example: issues
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        in: header
        example: 123123
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - name: X-Hub-Signature-256
        schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      x-github:
        subcategory: dependabot_alert
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
      summary: 'This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot alerts](https://docs.github.com/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see "[Dependabot
        alerts](https://docs.github.com/rest/dependabot/alerts)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Dependabot alerts" repository permission.


        > [!NOTE]

        > Webhook events for Dependabot alerts are currently in public preview and
        subject to change.'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A manifest file change introduced a vulnerable dependency that
        had previously been fixed.
  member-edited:
    post:
      operationId: member/edited
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-member-edited'
        required: true
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#member
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
        name: User-Agent
      - example: 12312312
        in: header
        schema:
          type: string
        name: X-Github-Hook-Id
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
        name: X-Hub-Signature-256
      x-github:
        category: webhooks
        subcategory: member
        githubCloudOnly: false
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
      description: Permissions were changed for a collaborator on a repository.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to collaborators
        in a repository. For more information, see "[Adding outside collaborators
        to repositories in your organization](https://docs.github.com/organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization)."
        For more information about the API to manage repository collaborators, see
        [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#repositorycollaboratorconnection)
        or "[Collaborators](https://docs.github.com/rest/collaborators/collaborators)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
  repository-advisory-reported:
    post:
      operationId: repository-advisory/reported
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-advisory-reported'
        required: true
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_advisory
      parameters:
      - name: User-Agent
        schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
      - name: X-Github-Hook-Id
        schema:
          type: string
        in: header
        example: 12312312
      - name: X-Github-Event
        schema:
          type: string
        in: header
        example: issues
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        in: header
        schema:
          type: string
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
      x-github:
        subcategory: repository_advisory
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
      description: A private vulnerability report was submitted.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a repository
        security advisory. For more information about repository security advisories,
        see "[About GitHub Security Advisories for repositories](https://docs.github.com/code-security/repository-security-advisories/about-github-security-advisories-for-repositories)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Repository security advisories" permission.'
  projects-v2-created:
    post:
      operationId: projects-v2/created
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-created'
        required: true
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2
      parameters:
      - example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
        name: User-Agent
      - example: 12312312
        schema:
          type: string
        in: header
        name: X-Github-Hook-Id
      - example: project-v2
        in: header
        schema:
          type: string
        name: X-Github-Event
      - example: 123123
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
        name: X-Hub-Signature-256
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: projects_v2
        supported-webhook-types:
        - organization
        enabledForGitHubApps: true
      summary: 'This event occurs when there is activity relating to an organization-level
        project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item` event.
        For activity relating to Projects (classic), use the `project`, `project_card`,
        and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      description: A project in the organization was created.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  secret-scanning-alert-resolved:
    post:
      operationId: secret-scanning-alert/resolved
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-resolved'
        required: true
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#secret_scanning_alert
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
        in: header
      - name: X-Github-Event
        schema:
          type: string
        in: header
        example: issues
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        in: header
        schema:
          type: string
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
      x-github:
        subcategory: secret_scanning_alert
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
      summary: 'This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret scanning](https://docs.github.com/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see "[Secret
        scanning](https://docs.github.com/rest/secret-scanning)" in the REST API documentation.


        For activity relating to secret scanning alert locations, use the `secret_scanning_alert_location`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Secret scanning alerts" repository permission.'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A secret scanning alert was closed.
  projects-v2-item-created:
    post:
      operationId: projects-v2-item/created
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2_item
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-created'
        required: true
      parameters:
      - example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
        name: User-Agent
      - example: 12312312
        schema:
          type: string
        in: header
        name: X-Github-Hook-Id
      - example: project-v2-item
        in: header
        schema:
          type: string
        name: X-Github-Event
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
        name: X-Hub-Signature-256
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: projects_v2_item
        supported-webhook-types:
        - organization
        enabledForGitHubApps: true
      summary: 'This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project), use
        the `projects_v2` event. For activity relating to Projects (classic), use
        the `project`, `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: An item was added to a project in the organization.
  team-removed-from-repository:
    post:
      operationId: team/removed-from-repository
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#team
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-removed-from-repository'
        required: true
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Id
        example: 12312312
        in: header
        schema:
          type: string
      - name: X-Github-Event
        schema:
          type: string
        in: header
        example: issues
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
        in: header
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
      x-github:
        subcategory: team
        category: webhooks
        supported-webhook-types:
        - organization
        - business
        - app
        githubCloudOnly: false
      description: A team's access to a repository was removed.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to teams in an organization.

        For more information, see "[About teams](https://docs.github.com/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
  sub-issues-sub-issue-added:
    post:
      operationId: sub-issues/sub-issue-added
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sub-issues-sub-issue-added'
        required: true
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#sub-issues
      parameters:
      - example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
        name: User-Agent
      - example: 12312312
        schema:
          type: string
        in: header
        name: X-Github-Hook-Id
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - example: 123123
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
        name: X-Hub-Signature-256
      x-github:
        category: webhooks
        subcategory: sub-issues
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
        - app
      summary: 'This event occurs when there is activity relating to sub-issues.


        For activity relating to issues more generally, use the `issues` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permissions.'
      description: A sub-issue was added to an issue.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  issues-assigned:
    post:
      operationId: issues/assigned
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-assigned'
        required: true
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Id
        example: 12312312
        in: header
        schema:
          type: string
      - name: X-Github-Event
        schema:
          type: string
        in: header
        example: issues
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        in: header
        schema:
          type: string
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
      x-github:
        subcategory: issues
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
      description: An issue was assigned to a user.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
  installation-repositories-added:
    post:
      operationId: installation-repositories/added
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#installation_repositories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-repositories-added'
        required: true
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
        name: User-Agent
      - example: 12312312
        in: header
        schema:
          type: string
        name: X-Github-Hook-Id
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
        name: X-Hub-Signature-256
      x-github:
        category: webhooks
        subcategory: installation_repositories
        githubCloudOnly: false
        supported-webhook-types:
        - app
      summary: 'This event occurs when there is activity relating to which repositories
        a GitHub App installation can access. All GitHub Apps receive this event by
        default. You cannot manually subscribe to this event.


        For more information about GitHub Apps, see "[About apps](https://docs.github.com/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#app) or "[Apps](https://docs.github.com/rest/apps)"
        in the REST API documentation.'
      description: A GitHub App installation was granted access to one or more repositories.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  projects-v2-closed:
    post:
      operationId: projects-v2/closed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-closed'
        required: true
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
        in: header
      - name: X-Github-Event
        schema:
          type: string
        example: project-v2
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        in: header
        schema:
          type: string
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
      x-github:
        subcategory: projects_v2
        enabledForGitHubApps: true
        category: webhooks
        githubCloudOnly: false
        supported-webhook-types:
        - organization
      summary: 'This event occurs when there is activity relating to an organization-level
        project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item` event.
        For activity relating to Projects (classic), use the `project`, `project_card`,
        and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A project in the organization was closed.
  issues-opened:
    post:
      operationId: issues/opened
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-opened'
        required: true
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
        name: User-Agent
      - example: 12312312
        in: header
        schema:
          type: string
        name: X-Github-Hook-Id
      - example: issues
        in: header
        schema:
          type: string
        name: X-Github-Event
      - example: 123123
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
        name: X-Hub-Signature-256
      x-github:
        category: webhooks
        subcategory: issues
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
        - app
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      description: An issue was created. When a closed issue is reopened, the action
        will be `reopened` instead.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  workflow-run-in-progress:
    post:
      operationId: workflow-run/in-progress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-run-in-progress'
        required: true
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#workflow_run
      parameters:
      - name: User-Agent
        schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
      - name: X-Github-Hook-Id
        schema:
          type: string
        in: header
        example: 12312312
      - name: X-Github-Event
        example: issues
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
        in: header
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
      x-github:
        subcategory: workflow_run
        category: webhooks
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
        githubCloudOnly: false
      description: A workflow run started processing on a runner.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a run of a GitHub
        Actions workflow. For more information, see "[About workflows](https://docs.github.com/actions/using-workflows/about-workflows)."
        For information about the APIs to manage workflow runs, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#workflowrun)
        or "[Workflow runs](https://docs.github.com/rest/actions/workflow-runs)" in
        the REST API documentation.


        For activity relating to a job in a workflow run, use the `workflow_job` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Actions" repository permission.'
  repository-vulnerability-alert-resolve:
    post:
      operationId: repository-vulnerability-alert/resolve
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_vulnerability_alert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-vulnerability-alert-resolve'
        required: true
      parameters:
      - example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
        name: User-Agent
      - example: 12312312
        schema:
          type: string
        in: header
        name: X-Github-Hook-Id
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - example: 123123
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
        name: X-Hub-Signature-256
      x-github:
        category: webhooks
        subcategory: repository_vulnerability_alert
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
      summary: 'This event occurs when there is activity relating to a security vulnerability
        alert in a repository.


        > [!WARNING]

        > **Closing down notice:** This event is closing down. Use the `dependabot_alert`
        event instead.'
      description: A repository vulnerability alert was marked as resolved.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  pull-request-review-thread-resolved:
    post:
      operationId: pull-request-review-thread/resolved
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request_review_thread
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-thread-resolved'
        required: true
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
        in: header
      - name: X-Github-Event
        schema:
          type: string
        in: header
        example: issues
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        in: header
        schema:
          type: string
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
      x-github:
        subcategory: pull_request_review_thread
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
      summary: 'This event occurs when there is activity relating to a comment thread
        on a pull request. For more information, see "[About pull request reviews](https://docs.github.com/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#pullrequestreviewthread)
        or "[Pull request review comments](https://docs.github.com/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request review comments, pull request comments,
        or pull request reviews, use the `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      description: A comment thread on a pull request was marked as resolved.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  project-card-created:
    post:
      operationId: project-card/created
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project_card
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-created'
        required: true
      parameters:
      - example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
        name: User-Agent
      - example: 12312312
        schema:
          type: string
        in: header
        name: X-Github-Hook-Id
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - example: 123123
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
        name: X-Hub-Signature-256
      x-github:
        category: webhooks
        subcategory: project_card
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
        - app
      description: A card was added to a project (classic).
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a project (classic) or a column on a project (classic),
        use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
  status:
    post:
      operationId: status
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-status'
        required: true
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Id
        example: 12312312
        in: header
        schema:
          type: string
      - name: X-Github-Event
        example: issues
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        in: header
        schema:
          type: string
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
      x-github:
        subcategory: status
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
      summary: 'This event occurs when the status of a Git commit changes. For example,
        commits can be marked as `error`, `failure`, `pending`, or `success`. For
        more information, see "[About status checks](https://docs.github.com/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks)."
        For information about the APIs to manage commit statuses, see [the GraphQL
        documentation](https://docs.github.com/graphql/reference/objects#status) or
        "[Commit statuses](https://docs.github.com/rest/commits/statuses)" in the
        REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Commit statuses" repository permission.'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  code-scanning-alert-closed-by-user:
    post:
      operationId: code-scanning-alert/closed-by-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-closed-by-user'
        required: true
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#code_scanning_alert
      parameters:
      - example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
        name: User-Agent
      - example: 12312312
        in: header
        schema:
          type: string
        name: X-Github-Hook-Id
      - example: issues
        in: header
        schema:
          type: string
        name: X-Github-Event
      - example: 123123
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
        name: X-Hub-Signature-256
      x-github:
        category: webhooks
        subcategory: code_scanning_alert
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
        - app
      description: Someone closed a code scanning alert.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code scanning](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning alerts](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code scanning](https://docs.github.com/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Code scanning alerts" repository permission.'
  delete:
    post:
      operationId: delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-delete'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#delete
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Id
        example: 12312312
        in: header
        schema:
          type: string
      - name: X-Github-Event
        example: issues
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        in: header
        schema:
          type: string
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
      x-github:
        subcategory: delete
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
      summary: 'This event occurs when a Git branch or tag is deleted. To subscribe
        to all pushes to a repository, including

        branch and tag deletions, use the [`push`](#push) webhook event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.


        > [!NOTE]

        > This event will not occur when more than three tags are deleted at once.'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  projects-v2-reopened:
    post:
      operationId: projects-v2/reopened
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-reopened'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
        name: User-Agent
      - example: 12312312
        in: header
        schema:
          type: string
        name: X-Github-Hook-Id
      - example: project-v2
        in: header
        schema:
          type: string
        name: X-Github-Event
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
        name: X-Hub-Signature-256
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: projects_v2
        supported-webhook-types:
        - organization
        enabledForGitHubApps: true
      summary: 'This event occurs when there is activity relating to an organization-level
        project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item` event.
        For activity relating to Projects (classic), use the `project`, `project_card`,
        and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      description: A project in the organization was reopened.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  installation-deleted:
    post:
      operationId: installation/deleted
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-deleted'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#installation
      parameters:
      - name: User-Agent
        schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
      - name: X-Github-Hook-Id
        schema:
          type: string
        in: header
        example: 12312312
      - name: X-Github-Event
        example: issues
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        example: 123123
        in: header
      - name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
        in: header
      - name: X-GitHub-Delivery
        schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
      - name: X-Hub-Signature-256
        schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: installation
        supported-webhook-types:
        - app
      description: Someone uninstalled a GitHub App from their user or organization
        account.
      summary: 'This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot manually
        subscribe to this event.


        For more information about GitHub Apps, see "[About apps](https://docs.github.com/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#app) or "[Apps](https://docs.github.com/rest/apps)"
        in the REST API documentation.'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  branch-protection-rule-deleted:
    post:
      operationId: branch-protection-rule/deleted
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#branch_protection_rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-branch-protection-rule-deleted'
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
        name: User-Agent
      - example: 12312312
        in: header
        schema:
          type: string
        name: X-Github-Hook-Id
      - example: issues
        in: header
        schema:
          type: string
        name: X-Github-Event
      - example: 123123
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        example: repository
        in: header
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
        name: X-Hub-Signature-256
      x-github:
        category: webhooks
        subcategory: branch_protection_rule
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
        - app
      description: A branch protection rule was deleted.
      summary: 'This event occurs when there is activity relating to branch protection
        rules. For more information, see "[About protected branches](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches)."
        For information about the APIs to manage branch protection rules, see [the
        GraphQL documentation](https://docs.github.com/graphql/reference/objects#branchprotectionrule)
        or "[Branch protection](https://docs.github.com/rest/branches/branch-protection)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" repository permission.'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  org-block-unblocked:
    post:
      operationId: org-block/unblocked
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#org_block
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-org-block-unblocked'
      parameters:
      - name: User-Agent
        schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
      - name: X-Github-Hook-Id
        schema:
          type: string
        in: header
        example: 12312312
      - name: X-Github-Event
        example: issues
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Type
        example: repository
        in: header
        schema:
          type: string
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: org_block
        supported-webhook-types:
        - organization
        - business
        - app
      description: A previously blocked user was unblocked from the organization.
      summary: 'This event occurs when organization owners or moderators block or
        unblock a non-member from collaborating on the organization''s repositories.
        For more information, see "[Blocking a user from your organization](https://docs.github.com/communities/maintaining-your-safety-on-github/blocking-a-user-from-your-organization)."
        For information about the APIs to manage blocked users, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#userblockedevent)
        or "[Blocking users](https://docs.github.com/rest/orgs/blocking)" in the REST
        API documentation.


        If you want to receive an event when members are added or removed from an
        organization, use the `organization` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" organization permission.'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  ping:
    post:
      operationId: ping
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-ping'
            examples:
              default:
                $ref: '#/components/examples/ping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-ping-form-encoded'
            examples:
              default:
                $ref: '#/components/examples/ping-form-encoded'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#ping
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
        name: User-Agent
      - example: 12312312
        in: header
        schema:
          type: string
        name: X-Github-Hook-Id
      - example: issues
        in: header
        schema:
          type: string
        name: X-Github-Event
      - example: 123123
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        example: repository
        in: header
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
        name: X-Hub-Signature-256
      x-github:
        category: webhooks
        subcategory: ping
        supported-webhook-types:
        - repository
        - organization
        - app
        - business
        - marketplace
        githubCloudOnly: false
        enabledForGitHubApps: true
      summary: This event occurs when you create a new webhook. The ping event is
        a confirmation from GitHub that you configured the webhook correctly.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  repository-ruleset-edited:
    post:
      operationId: repository-ruleset/edited
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-ruleset-edited'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_ruleset
      parameters:
      - name: User-Agent
        schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
      - name: X-Github-Hook-Id
        schema:
          type: string
        in: header
        example: 12312312
      - name: X-Github-Event
        schema:
          type: string
        example: issues
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Type
        example: repository
        in: header
        schema:
          type: string
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: repository_ruleset
        supported-webhook-types:
        - repository
        - organization
        - app
      description: A repository ruleset was edited.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to repository rulesets.

        For more information about repository rulesets, see "[Managing rulesets](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets)."

        For more information on managing rulesets via the APIs, see [Repository ruleset](https://docs.github.com/graphql/reference/objects#repositoryruleset)
        in the GraphQL documentation or "[Repository rules](https://docs.github.com/rest/repos/rules)"
        and "[Organization rules](https://docs.github.com/rest/orgs/rules) in the
        REST API documentation."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" repository or organization permission.'
  projects-v2-item-reordered:
    post:
      operationId: projects-v2-item/reordered
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2_item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-reordered'
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
        name: User-Agent
      - example: 12312312
        in: header
        schema:
          type: string
        name: X-Github-Hook-Id
      - example: project-v2-item
        in: header
        schema:
          type: string
        name: X-Github-Event
      - example: 123123
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        in: header
        example: repository
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
        name: X-Hub-Signature-256
      x-github:
        category: webhooks
        subcategory: projects_v2_item
        supported-webhook-types:
        - organization
        githubCloudOnly: false
        enabledForGitHubApps: true
      summary: 'This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project), use
        the `projects_v2` event. For activity relating to Projects (classic), use
        the `project`, `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: The position of an item in an organization project was changed.
        For example, an item was moved above or below another item in the table or
        board layout.
  issues-unpinned:
    post:
      operationId: issues/unpinned
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-unpinned'
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Id
        example: 12312312
        in: header
        schema:
          type: string
      - name: X-Github-Event
        example: issues
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Installation-Target-Type
        in: header
        example: repository
        schema:
          type: string
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
      description: An issue was unpinned from a repository. For more information,
        see "[Pinning an issue to your repository](https://docs.github.com/issues/tracking-your-work-with-issues/pinning-an-issue-to-your-repository)."
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  custom-property-created:
    post:
      operationId: custom-property/created
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-custom-property-created'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#custom_property
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
        name: User-Agent
      - example: 12312312
        in: header
        schema:
          type: string
        name: X-Github-Hook-Id
      - example: issues
        in: header
        schema:
          type: string
        name: X-Github-Event
      - example: 123123
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        in: header
        example: repository
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
        name: X-Hub-Signature-256
      x-github:
        category: webhooks
        subcategory: custom_property
        supported-webhook-types:
        - organization
        - app
        githubCloudOnly: false
      summary: 'This event occurs when there is activity relating to a custom property.


        For more information, see "[Managing custom properties for repositories in
        your organization](https://docs.github.com/organizations/managing-organization-settings/managing-custom-properties-for-repositories-in-your-organization)".
        For information about the APIs to manage custom properties, see "[Custom properties](https://docs.github.com/rest/orgs/custom-properties)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Custom properties" organization permission.'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A new custom property was created.
  sub-issues-parent-issue-added:
    post:
      operationId: sub-issues/parent-issue-added
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#sub-issues
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sub-issues-parent-issue-added'
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
        in: header
      - name: X-Github-Event
        example: issues
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Installation-Target-Type
        in: header
        example: repository
        schema:
          type: string
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: sub-issues
        supported-webhook-types:
        - repository
        - organization
        - app
      description: A parent issue was added to an issue.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to sub-issues.


        For activity relating to issues more generally, use the `issues` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permissions.'
  pull-request-review-submitted:
    post:
      operationId: pull-request-review/submitted
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request_review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-submitted'
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
        name: User-Agent
      - example: 12312312
        in: header
        schema:
          type: string
        name: X-Github-Hook-Id
      - example: issues
        in: header
        schema:
          type: string
        name: X-Github-Event
      - example: 123123
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        in: header
        example: repository
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
        name: X-Hub-Signature-256
      x-github:
        category: webhooks
        subcategory: pull_request_review
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
      description: A review on a pull request was submitted.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to a pull request
        review. A pull request review is a group of pull request review comments in
        addition to a body comment and a state. For more information, see "[About
        pull request reviews](https://docs.github.com/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#pullrequestreview)
        or "[Pull request reviews](https://docs.github.com/rest/pulls/reviews)" in
        the REST API documentation.


        For activity related to pull request review comments, pull request comments,
        or pull request review threads, use the `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
  discussion-transferred:
    post:
      operationId: discussion/transferred
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-transferred'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
        in: header
      - name: X-Github-Event
        example: issues
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Type
        in: header
        example: repository
        schema:
          type: string
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
      x-github:
        githubCloudOnly: false
        category: webhooks
        subcategory: discussion
        supported-webhook-types:
        - repository
        - organization
        - app
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A discussion was transferred to another repository.
  organization-renamed:
    post:
      operationId: organization/renamed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-renamed'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#organization
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
        name: User-Agent
      - example: 12312312
        in: header
        schema:
          type: string
        name: X-Github-Hook-Id
      - example: issues
        in: header
        schema:
          type: string
        name: X-Github-Event
      - example: 123123
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        in: header
        example: repository
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
        name: X-Hub-Signature-256
      x-github:
        category: webhooks
        subcategory: organization
        supported-webhook-types:
        - organization
        - business
        - app
        githubCloudOnly: false
      description: The name of an organization was changed.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      summary: 'This event occurs when there is activity relating to an organization
        and its members. For more information, see "[About organizations](https://docs.github.com/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#organization)
        or "[Organizations](https://docs.github.com/rest/orgs)" in the REST API documentation.


        If you want to receive an event when a non-member is blocked or unblocked
        from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
  star-created:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        name: User-Agent
        in: header
        schema:
          type: string
      - example: 12312312
        name: X-Github-Hook-Id
        in: header
        schema:
          type: string
      - name: X-Github-Event
        example: issues
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        in: header
        example: 123123
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        in: header
        example: repository
      - schema:
          type: string
        name: X-GitHub-Delivery
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - schema:
          type: string
        name: X-Hub-Signature-256
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity relating to repository stars.
        For more information about stars, see "[Saving repositories with stars](https://docs.github.com/get-started/exploring-projects-on-github/saving-repositories-with-stars)."
        For information about the APIs to manage stars, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#starredrepositoryconnection)
        or "[Starring](https://docs.github.com/rest/activity/starring)" in the REST
        API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#star
      operationId: star/created
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-star-created'
      description: Someone starred a repository.
      x-github:
        subcategory: star
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  repository-vulnerability-alert-create:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        name: X-Github-Event
        example: issues
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        example: 123123
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        example: repository
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to a security vulnerability
        alert in a repository.


        > [!WARNING]

        > **Closing down notice:** This event is closing down. Use the `dependabot_alert`
        event instead.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_vulnerability_alert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-vulnerability-alert-create'
      operationId: repository-vulnerability-alert/create
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A repository vulnerability alert was created.
      x-github:
        subcategory: repository_vulnerability_alert
        category: webhooks
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
  projects-v2-status-update-deleted:
    post:
      parameters:
      - in: header
        name: User-Agent
        schema:
          type: string
        example: GitHub-Hookshot/123abc
      - in: header
        name: X-Github-Hook-Id
        schema:
          type: string
        example: 12312312
      - in: header
        name: X-Github-Event
        schema:
          type: string
        example: project-v2-status-update
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        example: 123123
      - example: repository
        name: X-Github-Hook-Installation-Target-Type
        in: header
        schema:
          type: string
      - in: header
        name: X-GitHub-Delivery
        schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - in: header
        name: X-Hub-Signature-256
        schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity relating to a status update
        on an organization-level project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."


        For activity relating to a project, use the `projects_v2` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > To share feedback about projects webhooks with GitHub, see the [Projects
        webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2_status_update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-status-update-deleted'
      operationId: projects-v2-status-update/deleted
      description: A status update was removed from a project in the organization.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        githubCloudOnly: false
        supported-webhook-types:
        - organization
        subcategory: projects_v2_status_update
        enabledForGitHubApps: true
  repository-renamed:
    post:
      parameters:
      - name: User-Agent
        schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
      - name: X-Github-Hook-Id
        schema:
          type: string
        example: 12312312
        in: header
      - name: X-Github-Event
        example: issues
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        in: header
        schema:
          type: string
      - example: repository
        name: X-Github-Hook-Installation-Target-Type
        in: header
        schema:
          type: string
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to repositories.
        For more information, see "[About repositories](https://docs.github.com/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#repository)
        or "[Repositories](https://docs.github.com/rest/repos)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository
      operationId: repository/renamed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-renamed'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        githubCloudOnly: false
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
        subcategory: repository
      description: The name of a repository was changed.
  pull-request-converted-to-draft:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        name: User-Agent
        in: header
        schema:
          type: string
      - example: 12312312
        name: X-Github-Hook-Id
        in: header
        schema:
          type: string
      - example: issues
        name: X-Github-Event
        in: header
        schema:
          type: string
      - example: 123123
        name: X-Github-Hook-Installation-Target-Id
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Type
        example: repository
        in: header
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        in: header
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        in: header
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      operationId: pull-request/converted-to-draft
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-converted-to-draft'
      description: A pull request was converted to a draft. For more information,
        see "[Changing the stage of a pull request](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/changing-the-stage-of-a-pull-request)."
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: pull_request
        githubCloudOnly: false
  installation-repositories-removed:
    post:
      parameters:
      - name: User-Agent
        schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
      - name: X-Github-Hook-Id
        schema:
          type: string
        in: header
        example: 12312312
      - name: X-Github-Event
        schema:
          type: string
        in: header
        example: issues
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        in: header
        example: 123123
      - example: repository
        name: X-Github-Hook-Installation-Target-Type
        in: header
        schema:
          type: string
      - name: X-GitHub-Delivery
        schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - name: X-Hub-Signature-256
        schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#installation_repositories
      summary: 'This event occurs when there is activity relating to which repositories
        a GitHub App installation can access. All GitHub Apps receive this event by
        default. You cannot manually subscribe to this event.


        For more information about GitHub Apps, see "[About apps](https://docs.github.com/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#app) or "[Apps](https://docs.github.com/rest/apps)"
        in the REST API documentation.'
      operationId: installation-repositories/removed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-repositories-removed'
      description: Access to one or more repositories was revoked for a GitHub App
        installation.
      x-github:
        category: webhooks
        githubCloudOnly: false
        supported-webhook-types:
        - app
        subcategory: installation_repositories
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  projects-v2-edited:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        name: User-Agent
        in: header
        schema:
          type: string
      - example: 12312312
        name: X-Github-Hook-Id
        in: header
        schema:
          type: string
      - example: project-v2
        name: X-Github-Event
        in: header
        schema:
          type: string
      - example: 123123
        name: X-Github-Hook-Installation-Target-Id
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
        in: header
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        in: header
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        in: header
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to an organization-level
        project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item` event.
        For activity relating to Projects (classic), use the `project`, `project_card`,
        and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-edited'
      operationId: projects-v2/edited
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        githubCloudOnly: false
        supported-webhook-types:
        - organization
        subcategory: projects_v2
        enabledForGitHubApps: true
      description: The title, description, or README of a project in the organization
        was changed.
  organization-deleted:
    post:
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Id
        example: 12312312
        in: header
        schema:
          type: string
      - name: X-Github-Event
        example: issues
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        in: header
        schema:
          type: string
      - example: repository
        name: X-Github-Hook-Installation-Target-Type
        in: header
        schema:
          type: string
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#organization
      summary: 'This event occurs when there is activity relating to an organization
        and its members. For more information, see "[About organizations](https://docs.github.com/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#organization)
        or "[Organizations](https://docs.github.com/rest/orgs)" in the REST API documentation.


        If you want to receive an event when a non-member is blocked or unblocked
        from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      operationId: organization/deleted
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-deleted'
      description: An organization was deleted.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        supported-webhook-types:
        - organization
        - business
        - app
        githubCloudOnly: false
        subcategory: organization
  pull-request-dequeued:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - schema:
          type: string
        example: issues
        in: header
        name: X-Github-Event
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        in: header
        schema:
          type: string
      - example: repository
        name: X-Github-Hook-Installation-Target-Type
        in: header
        schema:
          type: string
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      operationId: pull-request/dequeued
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-dequeued'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: pull_request
      description: A pull request was removed from the merge queue.
  discussion-comment-created:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        name: User-Agent
        in: header
        schema:
          type: string
      - example: 12312312
        name: X-Github-Hook-Id
        in: header
        schema:
          type: string
      - example: issues
        name: X-Github-Event
        in: header
        schema:
          type: string
      - example: 123123
        name: X-Github-Hook-Installation-Target-Id
        in: header
        schema:
          type: string
      - schema:
          type: string
        example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        in: header
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        in: header
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to a comment on
        a discussion. For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a discussion as opposed to comments on a discussion,
        use the `discussion` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion_comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-comment-created'
      operationId: discussion-comment/created
      description: A comment on a discussion was created.
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: discussion_comment
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  sponsorship-cancelled:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - schema:
          type: string
        example: issues
        in: header
        name: X-Github-Event
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        in: header
        schema:
          type: string
      - example: repository
        name: X-Github-Hook-Installation-Target-Type
        in: header
        schema:
          type: string
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub Sponsors](https://docs.github.com/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more information,
        see "[Configuring webhooks for events in your sponsored account](https://docs.github.com/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#sponsorship
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-cancelled'
      operationId: sponsorship/cancelled
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        githubCloudOnly: false
        supported-webhook-types:
        - sponsors_listing
        subcategory: sponsorship
      description: 'A sponsorship was cancelled and the last billing cycle has ended.


        This event is only sent when a recurring (monthly) sponsorship is cancelled;
        it is not sent for one-time sponsorships.'
  issue-comment-edited:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        name: User-Agent
        in: header
        schema:
          type: string
      - example: 12312312
        name: X-Github-Hook-Id
        in: header
        schema:
          type: string
      - example: issues
        name: X-Github-Event
        in: header
        schema:
          type: string
      - example: 123123
        name: X-Github-Hook-Installation-Target-Id
        in: header
        schema:
          type: string
      - schema:
          type: string
        example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        in: header
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        in: header
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to a comment on
        an issue or pull request. For more information about issues and pull requests,
        see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)"
        and "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage issue comments, see [the GraphQL
        documentation](https://docs.github.com/graphql/reference/objects#issuecomment)
        or "[Issue comments](https://docs.github.com/rest/issues/comments)" in the
        REST API documentation.


        For activity relating to an issue as opposed to comments on an issue, use
        the `issue` event. For activity related to pull request reviews or pull request
        review comments, use the `pull_request_review` or `pull_request_review_comment`
        events. For more information about the different types of pull request comments,
        see "[Working with comments](https://docs.github.com/rest/guides/working-with-comments)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issue_comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issue-comment-edited'
      operationId: issue-comment/edited
      description: A comment on an issue or pull request was edited.
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: issue_comment
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  organization-member-invited:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - name: X-Github-Event
        example: issues
        in: header
        schema:
          type: string
      - schema:
          type: string
        example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        name: X-Github-Hook-Installation-Target-Type
        in: header
        schema:
          type: string
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#organization
      summary: 'This event occurs when there is activity relating to an organization
        and its members. For more information, see "[About organizations](https://docs.github.com/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#organization)
        or "[Organizations](https://docs.github.com/rest/orgs)" in the REST API documentation.


        If you want to receive an event when a non-member is blocked or unblocked
        from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      operationId: organization/member-invited
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-member-invited'
      description: A member was invited to join the organization.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        githubCloudOnly: false
        supported-webhook-types:
        - organization
        - business
        - app
        subcategory: organization
  discussion-deleted:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        name: User-Agent
        in: header
        schema:
          type: string
      - example: 12312312
        name: X-Github-Hook-Id
        in: header
        schema:
          type: string
      - example: issues
        name: X-Github-Event
        in: header
        schema:
          type: string
      - example: 123123
        name: X-Github-Hook-Installation-Target-Id
        in: header
        schema:
          type: string
      - schema:
          type: string
        example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        in: header
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        in: header
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-deleted'
      operationId: discussion/deleted
      description: A discussion was deleted.
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: discussion
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  milestone-deleted:
    post:
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Id
        example: 12312312
        in: header
        schema:
          type: string
      - schema:
          type: string
        example: issues
        in: header
        name: X-Github-Event
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        in: header
        schema:
          type: string
      - example: repository
        name: X-Github-Hook-Installation-Target-Type
        in: header
        schema:
          type: string
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#milestone
      summary: 'This event occurs when there is activity relating to milestones. For
        more information, see "[About milestones](https://docs.github.com/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#milestone)
        or "[Milestones](https://docs.github.com/rest/issues/milestones)" in the REST
        API documentation.


        If you want to receive an event when an issue or pull request is added to
        or removed from a milestone, use the `milestoned` or `demilestoned` action
        type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" or "Pull requests" repository permissions.'
      operationId: milestone/deleted
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-deleted'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: milestone
      description: A milestone was deleted.
  issues-reopened:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        name: User-Agent
        in: header
        schema:
          type: string
      - example: 12312312
        name: X-Github-Hook-Id
        in: header
        schema:
          type: string
      - example: issues
        name: X-Github-Event
        in: header
        schema:
          type: string
      - example: 123123
        name: X-Github-Hook-Installation-Target-Id
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Type
        example: repository
        in: header
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        in: header
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        in: header
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-reopened'
      operationId: issues/reopened
      description: A closed issue was reopened.
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: issues
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  security-and-analysis:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - schema:
          type: string
        example: issues
        in: header
        name: X-Github-Event
      - schema:
          type: string
        example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        name: X-Github-Hook-Installation-Target-Type
        in: header
        schema:
          type: string
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      summary: 'This event occurs when code security and analysis features are enabled
        or disabled for a repository. For more information, see "[GitHub security
        features](https://docs.github.com/code-security/getting-started/github-security-features)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#security_and_analysis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-security-and-analysis'
        required: true
      operationId: security-and-analysis
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: security_and_analysis
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
  star-deleted:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        name: User-Agent
        in: header
        schema:
          type: string
      - example: 12312312
        name: X-Github-Hook-Id
        in: header
        schema:
          type: string
      - example: issues
        name: X-Github-Event
        in: header
        schema:
          type: string
      - example: 123123
        name: X-Github-Hook-Installation-Target-Id
        in: header
        schema:
          type: string
      - schema:
          type: string
        example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        in: header
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        in: header
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#star
      summary: 'This event occurs when there is activity relating to repository stars.
        For more information about stars, see "[Saving repositories with stars](https://docs.github.com/get-started/exploring-projects-on-github/saving-repositories-with-stars)."
        For information about the APIs to manage stars, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#starredrepositoryconnection)
        or "[Starring](https://docs.github.com/rest/activity/starring)" in the REST
        API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-star-deleted'
        required: true
      operationId: star/deleted
      description: Someone unstarred the repository.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: star
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
  pull-request-auto-merge-enabled:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
        name: User-Agent
      - example: 12312312
        schema:
          type: string
        in: header
        name: X-Github-Hook-Id
      - name: X-Github-Event
        schema:
          type: string
        in: header
        example: issues
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
        in: header
        example: 123123
      - name: X-Github-Hook-Installation-Target-Type
        example: repository
        in: header
        schema:
          type: string
      - schema:
          type: string
        name: X-GitHub-Delivery
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - schema:
          type: string
        name: X-Hub-Signature-256
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      operationId: pull-request/auto-merge-enabled
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-auto-merge-enabled'
        required: true
      description: Auto merge was enabled for a pull request. For more information,
        see "[Automatically merging a pull request](https://docs.github.com/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request)."
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: pull_request
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  installation-unsuspend:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - schema:
          type: string
        example: issues
        in: header
        name: X-Github-Event
      - schema:
          type: string
        example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        in: header
        example: repository
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot manually
        subscribe to this event.


        For more information about GitHub Apps, see "[About apps](https://docs.github.com/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#app) or "[Apps](https://docs.github.com/rest/apps)"
        in the REST API documentation.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#installation
      operationId: installation/unsuspend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-unsuspend'
      description: A GitHub App that was blocked from accessing a user or organization
        account was given access the account again.
      x-github:
        subcategory: installation
        supported-webhook-types:
        - app
        category: webhooks
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  fork:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
        name: User-Agent
      - example: 12312312
        schema:
          type: string
        in: header
        name: X-Github-Hook-Id
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - schema:
          type: string
        example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#fork
      summary: 'This event occurs when someone forks a repository. For more information,
        see "[Fork a repo](https://docs.github.com/get-started/quickstart/fork-a-repo)."
        For information about the API to manage forks, see "[Forks](https://docs.github.com/rest/repos/forks)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      operationId: fork
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-fork'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: fork
  repository-deleted:
    post:
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Id
        example: 12312312
        in: header
        schema:
          type: string
      - name: X-Github-Event
        example: issues
        in: header
        schema:
          type: string
      - schema:
          type: string
        example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - schema:
          type: string
        example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to repositories.
        For more information, see "[About repositories](https://docs.github.com/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#repository)
        or "[Repositories](https://docs.github.com/rest/repos)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-deleted'
      operationId: repository/deleted
      description: A repository was deleted. GitHub Apps and repository webhooks will
        not receive this event.
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: repository
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  label-created:
    post:
      parameters:
      - in: header
        schema:
          type: string
        name: User-Agent
        example: GitHub-Hookshot/123abc
      - in: header
        schema:
          type: string
        name: X-Github-Hook-Id
        example: 12312312
      - in: header
        schema:
          type: string
        name: X-Github-Event
        example: issues
      - in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
      - example: repository
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        schema:
          type: string
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - in: header
        schema:
          type: string
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity relating to labels. For more
        information, see "[Managing labels](https://docs.github.com/issues/using-labels-and-milestones-to-track-work/managing-labels)."
        For information about the APIs to manage labels, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#label)
        or "[Labels](https://docs.github.com/rest/issues/labels)" in the REST API
        documentation.


        If you want to receive an event when a label is added to or removed from an
        issue, pull request, or discussion, use the `labeled` or `unlabeled` action
        type for the `issues`, `pull_request`, or `discussion` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#label
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-label-created'
      operationId: label/created
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        category: webhooks
        subcategory: label
      description: A label was created.
  secret-scanning-alert-location-created:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
        name: User-Agent
      - example: 12312312
        in: header
        schema:
          type: string
        name: X-Github-Hook-Id
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - schema:
          type: string
        example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to the locations
        of a secret in a secret scanning alert.


        For more information about secret scanning, see "[About secret scanning](https://docs.github.com/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see "[Secret
        scanning](https://docs.github.com/rest/secret-scanning)" in the REST API documentation.


        For activity relating to secret scanning alerts, use the `secret_scanning_alert`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Secret scanning alerts" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#secret_scanning_alert_location
      operationId: secret-scanning-alert-location/created
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-location-created-form-encoded'
            examples:
              default:
                $ref: '#/components/examples/secret-scanning-alert-location-created-form-encoded'
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-location-created'
            examples:
              default:
                $ref: '#/components/examples/secret-scanning-alert-location-created'
      description: A new instance of a previously detected secret was detected in
        a repository, and the location of the secret was added to the existing alert.
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: secret_scanning_alert_location
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  repository-dispatch-sample.collected:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - example: repository
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      summary: 'This event occurs when a GitHub App sends a `POST` request to `/repos/{owner}/{repo}/dispatches`.
        For more information, see [the REST API documentation for creating a repository
        dispatch event](https://docs.github.com/rest/repos/repos#create-a-repository-dispatch-event).
        In the payload, the `action` will be the `event_type` that was specified in
        the `POST /repos/{owner}/{repo}/dispatches` request body.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_dispatch
      operationId: repository-dispatch/sample.collected
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-dispatch-sample'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: repository_dispatch
        supported-webhook-types:
        - app
        category: webhooks
        githubCloudOnly: false
  project-deleted:
    post:
      parameters:
      - schema:
          type: string
        name: User-Agent
        in: header
        example: GitHub-Hookshot/123abc
      - schema:
          type: string
        name: X-Github-Hook-Id
        in: header
        example: 12312312
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - schema:
          type: string
        example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to a project (classic).
        For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a card or column on a project (classic), use the
        `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project
      operationId: project/deleted
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-deleted'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A project (classic) was deleted.
      x-github:
        githubCloudOnly: false
        subcategory: project
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
  sponsorship-created:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - example: repository
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#sponsorship
      summary: 'This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub Sponsors](https://docs.github.com/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more information,
        see "[Configuring webhooks for events in your sponsored account](https://docs.github.com/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-created'
      operationId: sponsorship/created
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A sponsor created a sponsorship for a sponsored account. This event
        occurs once the payment is successfully processed.
      x-github:
        subcategory: sponsorship
        supported-webhook-types:
        - sponsors_listing
        category: webhooks
        githubCloudOnly: false
  registry-package-published:
    post:
      parameters:
      - name: User-Agent
        schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - schema:
          type: string
        example: issues
        in: header
        name: X-Github-Event
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
        in: header
        example: 123123
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to GitHub Packages.
        For more information, see "[Introduction to GitHub Packages](https://docs.github.com/packages/learn-github-packages/introduction-to-github-packages)."
        For information about the APIs to manage GitHub Packages, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#package)
        or "[Packages](https://docs.github.com/rest/packages)" in the REST API documentation.


        To install this event on a GitHub App, the app must have at least read-level
        access for the "Packages" repository permission.


        > [!NOTE]

        > GitHub recommends that you use the newer `package` event instead.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#registry_package
      operationId: registry-package/published
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-registry-package-published'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: registry_package
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
      description: A package was published to a registry.
  dependabot-alert-reopened:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
        in: header
        example: repository
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#dependabot_alert
      summary: 'This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot alerts](https://docs.github.com/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see "[Dependabot
        alerts](https://docs.github.com/rest/dependabot/alerts)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Dependabot alerts" repository permission.


        > [!NOTE]

        > Webhook events for Dependabot alerts are currently in public preview and
        subject to change.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-reopened'
      operationId: dependabot-alert/reopened
      description: A Dependabot alert was manually reopened.
      x-github:
        subcategory: dependabot_alert
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  pull-request-enqueued:
    post:
      parameters:
      - name: User-Agent
        schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
      - name: X-Github-Hook-Id
        schema:
          type: string
        in: header
        example: 12312312
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-enqueued'
      operationId: pull-request/enqueued
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A pull request was added to the merge queue.
      x-github:
        githubCloudOnly: false
        subcategory: pull_request
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
  repository-ruleset-created:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        in: header
        example: repository
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to repository rulesets.

        For more information about repository rulesets, see "[Managing rulesets](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets)."

        For more information on managing rulesets via the APIs, see [Repository ruleset](https://docs.github.com/graphql/reference/objects#repositoryruleset)
        in the GraphQL documentation or "[Repository rules](https://docs.github.com/rest/repos/rules)"
        and "[Organization rules](https://docs.github.com/rest/orgs/rules) in the
        REST API documentation."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" repository or organization permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_ruleset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-ruleset-created'
      operationId: repository-ruleset/created
      description: A repository ruleset was created.
      x-github:
        subcategory: repository_ruleset
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  issues-deleted:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
        name: User-Agent
      - example: 12312312
        schema:
          type: string
        in: header
        name: X-Github-Hook-Id
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        in: header
        example: 123123
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - name: X-GitHub-Delivery
        schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - name: X-Hub-Signature-256
        schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-deleted'
      operationId: issues/deleted
      description: An issue was deleted.
      x-github:
        githubCloudOnly: false
        subcategory: issues
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  personal-access-token-request-denied:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: personal_access_token_request
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: integration
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to a request for
        a fine-grained personal access token to access resources that belong to a
        resource owner that requires approval for token access. For more information,
        see "[Creating a personal access token](https://docs.github.com/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Personal access token requests" organization permission.


        > [!NOTE]

        > Fine-grained PATs are in public preview. Related APIs, events, and functionality
        are subject to change.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#personal_access_token_request
      operationId: personal-access-token-request/denied
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-personal-access-token-request-denied'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: personal_access_token_request
        supported-webhook-types:
        - app
        category: webhooks
        githubCloudOnly: false
      description: A fine-grained personal access token request was denied.
  deployment-review-requested:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - name: X-Github-Event
        schema:
          type: string
        in: header
        example: issues
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
        in: header
        example: 123123
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        name: X-GitHub-Delivery
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - schema:
          type: string
        name: X-Hub-Signature-256
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity relating to deployment reviews.
        For more information, see "[About deployments](https://docs.github.com/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#deployment)
        or "[Deployments](https://docs.github.com/rest/deployments/deployments)" in
        the REST API documentation.


        For activity relating to deployment creation or deployment status, use the
        `deployment` or `deployment_status` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Deployments" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#deployment_review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-review-requested'
      operationId: deployment-review/requested
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: deployment_review
        category: webhooks
        supported-webhook-types:
        - app
      description: A deployment review was requested.
  dependabot-alert-auto-reopened:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        in: header
        example: repository
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot alerts](https://docs.github.com/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see "[Dependabot
        alerts](https://docs.github.com/rest/dependabot/alerts)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Dependabot alerts" repository permission.


        > [!NOTE]

        > Webhook events for Dependabot alerts are currently in public preview and
        subject to change.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#dependabot_alert
      operationId: dependabot-alert/auto-reopened
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-auto-reopened'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: dependabot_alert
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
      description: A Dependabot alert, that had been automatically closed by a Dependabot
        auto-triage rule, was automatically reopened because the alert metadata or
        rule changed.
  personal-access-token-request-created:
    post:
      parameters:
      - schema:
          type: string
        name: User-Agent
        in: header
        example: GitHub-Hookshot/123abc
      - schema:
          type: string
        name: X-GitHub-Delivery
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - schema:
          type: string
        example: personal_access_token_request
        in: header
        name: X-Github-Event
      - example: 12312312
        schema:
          type: string
        in: header
        name: X-Github-Hook-Id
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - example: integration
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to a request for
        a fine-grained personal access token to access resources that belong to a
        resource owner that requires approval for token access. For more information,
        see "[Creating a personal access token](https://docs.github.com/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Personal access token requests" organization permission.


        > [!NOTE]

        > Fine-grained PATs are in public preview. Related APIs, events, and functionality
        are subject to change.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#personal_access_token_request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-personal-access-token-request-created'
      operationId: personal-access-token-request/created
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A fine-grained personal access token request was created.
      x-github:
        githubCloudOnly: false
        subcategory: personal_access_token_request
        category: webhooks
        supported-webhook-types:
        - app
  workflow-job-completed:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        in: header
        example: repository
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#workflow_job
      summary: 'This event occurs when there is activity relating to a job in a GitHub
        Actions workflow. For more information, see "[Using jobs in a workflow](https://docs.github.com/actions/using-jobs/using-jobs-in-a-workflow)."
        For information about the API to manage workflow jobs, see "[Workflow jobs](https://docs.github.com/rest/actions/workflow-jobs)"
        in the REST API documentation.


        For activity relating to a workflow run instead of a job in a workflow run,
        use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Actions" repository permission.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-job-completed'
      operationId: workflow-job/completed
      description: A job in a workflow run finished. This event occurs when a job
        in a workflow is completed, regardless of whether the job was successful or
        unsuccessful.
      x-github:
        subcategory: workflow_job
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  pull-request-edited:
    post:
      parameters:
      - name: User-Agent
        schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
      - name: X-Github-Hook-Id
        schema:
          type: string
        in: header
        example: 12312312
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        in: header
        example: 123123
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - name: X-GitHub-Delivery
        schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - name: X-Hub-Signature-256
        schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      operationId: pull-request/edited
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-edited'
      description: The title or body of a pull request was edited, or the base branch
        of a pull request was changed.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: pull_request
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
  team-created:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        in: header
        example: repository
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to teams in an organization.

        For more information, see "[About teams](https://docs.github.com/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-created'
      operationId: team/created
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: team
        supported-webhook-types:
        - organization
        - business
        - app
        category: webhooks
        githubCloudOnly: false
      description: A team was created.
  project-closed:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - schema:
          type: string
        example: issues
        in: header
        name: X-Github-Event
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
        in: header
        example: 123123
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        name: X-GitHub-Delivery
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - schema:
          type: string
        name: X-Hub-Signature-256
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity relating to a project (classic).
        For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a card or column on a project (classic), use the
        `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-closed'
      operationId: project/closed
      description: A project (classic) was closed.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: project
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
  project-column-edited:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        in: header
        example: repository
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to a column on a
        project (classic). For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a project (classic) or a card on a project (classic),
        use the `project` and `project_card` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project_column
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-column-edited'
      operationId: project-column/edited
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: The name of a column on a project (classic) was changed.
      x-github:
        subcategory: project_column
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
  pull-request-review-edited:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - schema:
          type: string
        name: X-Github-Event
        in: header
        example: issues
      - schema:
          type: string
        example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request_review
      summary: 'This event occurs when there is activity relating to a pull request
        review. A pull request review is a group of pull request review comments in
        addition to a body comment and a state. For more information, see "[About
        pull request reviews](https://docs.github.com/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#pullrequestreview)
        or "[Pull request reviews](https://docs.github.com/rest/pulls/reviews)" in
        the REST API documentation.


        For activity related to pull request review comments, pull request comments,
        or pull request review threads, use the `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      operationId: pull-request-review/edited
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-edited'
      description: The body comment on a pull request review was edited.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: pull_request_review
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
  installation-created:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - example: repository
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot manually
        subscribe to this event.


        For more information about GitHub Apps, see "[About apps](https://docs.github.com/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#app) or "[Apps](https://docs.github.com/rest/apps)"
        in the REST API documentation.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#installation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-created'
      operationId: installation/created
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: installation
        supported-webhook-types:
        - app
        category: webhooks
        githubCloudOnly: false
      description: Someone installed a GitHub App on a user or organization account.
  issues-locked:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/locked
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-locked'
      description: Conversation on an issue was locked. For more information, see
        "[Locking conversations](https://docs.github.com/communities/moderating-comments-and-conversations/locking-conversations)."
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: issues
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
  check-run-created:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - schema:
          type: string
        example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to a check run.
        For information about check runs, see "[Getting started with the Checks API](https://docs.github.com/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check runs, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#checkrun)
        or "[Check Runs](https://docs.github.com/rest/checks/runs)" in the REST API
        documentation.


        For activity relating to check suites, use the `check-suite` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Checks" repository permission. To receive the `rerequested` and `requested_action`
        event types, the app must have at least write-level access for the "Checks"
        permission. GitHub Apps with write-level access for the "Checks" permission
        are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the `created`
        and `completed` event types in repositories.


        > [!NOTE]

        > The API only looks for pushes in the repository where the check run was
        created. Pushes to a branch in a forked repository are not detected and return
        an empty `pull_requests` array and a `null` value for `head_branch`.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#check_run
      operationId: check-run/created
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-check-run-created-form-encoded'
            examples:
              default:
                $ref: '#/components/examples/check-run-created-form-encoded'
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-run-created'
            examples:
              default:
                $ref: '#/components/examples/check-run-created'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A new check run was created.
      x-github:
        subcategory: check_run
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
        enabledForGitHubApps: true
  projects-v2-item-deleted:
    post:
      parameters:
      - schema:
          type: string
        name: User-Agent
        in: header
        example: GitHub-Hookshot/123abc
      - schema:
          type: string
        name: X-Github-Hook-Id
        in: header
        example: 12312312
      - example: project-v2-item
        schema:
          type: string
        in: header
        name: X-Github-Event
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        in: header
        example: 123123
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - name: X-GitHub-Delivery
        schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - name: X-Hub-Signature-256
        schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project), use
        the `projects_v2` event. For activity relating to Projects (classic), use
        the `project`, `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2_item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-deleted'
      operationId: projects-v2-item/deleted
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: An item was deleted from a project in the organization.
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: projects_v2_item
        category: webhooks
        supported-webhook-types:
        - organization
  deploy-key-created:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        in: header
        example: repository
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to deploy keys.
        For more information, see "[Managing deploy keys](https://docs.github.com/developers/overview/managing-deploy-keys)."
        For information about the APIs to manage deploy keys, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#deploykey)
        or "[Deploy keys](https://docs.github.com/rest/deploy-keys)" in the REST API
        documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Deployments" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#deploy_key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deploy-key-created'
      operationId: deploy-key/created
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: deploy_key
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
      description: A deploy key was created.
  discussion-locked:
    post:
      parameters:
      - schema:
          type: string
        name: User-Agent
        in: header
        example: GitHub-Hookshot/123abc
      - schema:
          type: string
        name: X-Github-Hook-Id
        in: header
        example: 12312312
      - name: X-Github-Event
        schema:
          type: string
        in: header
        example: issues
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
        in: header
        example: 123123
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        name: X-GitHub-Delivery
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - schema:
          type: string
        name: X-Hub-Signature-256
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      operationId: discussion/locked
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-locked'
      description: A discussion was locked.
      x-github:
        githubCloudOnly: false
        subcategory: discussion
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  pull-request-demilestoned:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - schema:
          type: string
        example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-demilestoned'
      operationId: pull-request/demilestoned
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
      description: A pull request was removed from a milestone.
  project-edited:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - schema:
          type: string
        example: issues
        in: header
        name: X-Github-Event
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        in: header
        example: 123123
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - name: X-GitHub-Delivery
        schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - name: X-Hub-Signature-256
        schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project
      summary: 'This event occurs when there is activity relating to a project (classic).
        For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a card or column on a project (classic), use the
        `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      operationId: project/edited
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-edited'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: The name or description of a project (classic) was changed.
      x-github:
        githubCloudOnly: false
        subcategory: project
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
  package-updated:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - example: repository
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#package
      summary: 'This event occurs when there is activity relating to GitHub Packages.
        For more information, see "[Introduction to GitHub Packages](https://docs.github.com/packages/learn-github-packages/introduction-to-github-packages)."
        For information about the APIs to manage GitHub Packages, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#package)
        or "[Packages](https://docs.github.com/rest/packages)" in the REST API documentation.


        To install this event on a GitHub App, the app must have at least read-level
        access for the "Packages" repository permission.'
      operationId: package/updated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-package-updated'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: package
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
      description: A previously published package was updated.
  pull-request-review-comment-created:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - name: X-Github-Event
        schema:
          type: string
        in: header
        example: issues
      - schema:
          type: string
        example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to a pull request
        review comment. A pull request review comment is a comment on a pull request''s
        diff. For more information, see "[Commenting on a pull request](https://docs.github.com/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)."
        For information about the APIs to manage pull request review comments, see
        [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#pullrequestreviewcomment)
        or "[Pull request review comments](https://docs.github.com/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request comments, or pull
        request review threads, use the `pull_request_review`, `issue_comment`, or
        `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request_review_comment
      operationId: pull-request-review-comment/created
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-comment-created'
      description: A comment on a pull request diff was created.
      x-github:
        githubCloudOnly: false
        subcategory: pull_request_review_comment
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  membership-added:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - schema:
          type: string
        example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to team membership.
        For more information, see "[About teams](https://docs.github.com/organizations/organizing-members-into-teams/about-teams)."
        For more information about the APIs to manage team memberships, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#team)
        or "[Team members](https://docs.github.com/rest/teams/members)" in the REST
        API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#membership
      operationId: membership/added
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-membership-added'
      description: An organization member was added to a team.
      x-github:
        subcategory: membership
        supported-webhook-types:
        - organization
        - business
        - app
        category: webhooks
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  sub-issues-sub-issue-removed:
    post:
      parameters:
      - schema:
          type: string
        name: User-Agent
        in: header
        example: GitHub-Hookshot/123abc
      - schema:
          type: string
        name: X-Github-Hook-Id
        in: header
        example: 12312312
      - schema:
          type: string
        name: X-Github-Event
        in: header
        example: issues
      - schema:
          type: string
        example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to sub-issues.


        For activity relating to issues more generally, use the `issues` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permissions.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#sub-issues
      operationId: sub-issues/sub-issue-removed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sub-issues-sub-issue-removed'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: sub-issues
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
      description: A sub-issue was removed from an issue.
  discussion-created:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        in: header
        example: repository
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-created'
      operationId: discussion/created
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A discussion was created.
      x-github:
        subcategory: discussion
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
  discussion-answered:
    post:
      parameters:
      - schema:
          type: string
        name: User-Agent
        in: header
        example: GitHub-Hookshot/123abc
      - schema:
          type: string
        name: X-Github-Hook-Id
        in: header
        example: 12312312
      - schema:
          type: string
        name: X-Github-Event
        in: header
        example: issues
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
        in: header
        example: 123123
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        name: X-GitHub-Delivery
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - schema:
          type: string
        name: X-Hub-Signature-256
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      operationId: discussion/answered
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-answered'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A comment on the discussion was marked as the answer.
      x-github:
        githubCloudOnly: false
        subcategory: discussion
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-review-comment-edited:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
        in: header
        example: repository
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request_review_comment
      summary: 'This event occurs when there is activity relating to a pull request
        review comment. A pull request review comment is a comment on a pull request''s
        diff. For more information, see "[Commenting on a pull request](https://docs.github.com/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)."
        For information about the APIs to manage pull request review comments, see
        [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#pullrequestreviewcomment)
        or "[Pull request review comments](https://docs.github.com/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request comments, or pull
        request review threads, use the `pull_request_review`, `issue_comment`, or
        `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      operationId: pull-request-review-comment/edited
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-comment-edited'
      description: The content of a comment on a pull request diff was changed.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: pull_request_review_comment
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
  project-column-created:
    post:
      parameters:
      - name: User-Agent
        schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
      - name: X-Github-Hook-Id
        schema:
          type: string
        in: header
        example: 12312312
      - schema:
          type: string
        example: issues
        in: header
        name: X-Github-Event
      - schema:
          type: string
        example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project_column
      summary: 'This event occurs when there is activity relating to a column on a
        project (classic). For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a project (classic) or a card on a project (classic),
        use the `project` and `project_card` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-column-created'
      operationId: project-column/created
      description: A column was added to a project (classic).
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: project_column
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
  custom-property-values-updated:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
        in: header
        example: repository
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#custom-property-values
      summary: 'This event occurs when there is activity relating to custom property
        values for a repository.


        For more information, see "[Managing custom properties for repositories in
        your organization](https://docs.github.com/organizations/managing-organization-settings/managing-custom-properties-for-repositories-in-your-organization)".
        For information about the APIs to manage custom properties for a repository,
        see "[Custom properties](https://docs.github.com/rest/repos/custom-properties)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Custom properties" organization permission.'
      operationId: custom-property-values/updated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-custom-property-values-updated'
      description: The custom property values of a repository were updated.
      x-github:
        subcategory: custom-property-values
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  release-unpublished:
    post:
      parameters:
      - name: User-Agent
        schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
      - name: X-Github-Hook-Id
        schema:
          type: string
        in: header
        example: 12312312
      - schema:
          type: string
        name: X-Github-Event
        in: header
        example: issues
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        in: header
        example: 123123
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - name: X-GitHub-Delivery
        schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - name: X-Hub-Signature-256
        schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#release
      summary: 'This event occurs when there is activity relating to releases. For
        more information, see "[About releases](https://docs.github.com/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#release)
        or "[Releases](https://docs.github.com/rest/releases)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      operationId: release/unpublished
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-unpublished'
      description: A release or pre-release was unpublished.
      x-github:
        githubCloudOnly: false
        subcategory: release
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  org-block-blocked:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - example: repository
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      summary: 'This event occurs when organization owners or moderators block or
        unblock a non-member from collaborating on the organization''s repositories.
        For more information, see "[Blocking a user from your organization](https://docs.github.com/communities/maintaining-your-safety-on-github/blocking-a-user-from-your-organization)."
        For information about the APIs to manage blocked users, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#userblockedevent)
        or "[Blocking users](https://docs.github.com/rest/orgs/blocking)" in the REST
        API documentation.


        If you want to receive an event when members are added or removed from an
        organization, use the `organization` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" organization permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#org_block
      operationId: org-block/blocked
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-org-block-blocked'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: org_block
        supported-webhook-types:
        - organization
        - business
        - app
        category: webhooks
        githubCloudOnly: false
      description: A user was blocked from the organization.
  repository-ruleset-deleted:
    post:
      parameters:
      - schema:
          type: string
        name: User-Agent
        in: header
        example: GitHub-Hookshot/123abc
      - schema:
          type: string
        name: X-Github-Hook-Id
        in: header
        example: 12312312
      - schema:
          type: string
        example: issues
        in: header
        name: X-Github-Event
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
        in: header
        example: 123123
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        name: X-GitHub-Delivery
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - schema:
          type: string
        name: X-Hub-Signature-256
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_ruleset
      summary: 'This event occurs when there is activity relating to repository rulesets.

        For more information about repository rulesets, see "[Managing rulesets](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets)."

        For more information on managing rulesets via the APIs, see [Repository ruleset](https://docs.github.com/graphql/reference/objects#repositoryruleset)
        in the GraphQL documentation or "[Repository rules](https://docs.github.com/rest/repos/rules)"
        and "[Organization rules](https://docs.github.com/rest/orgs/rules) in the
        REST API documentation."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" repository or organization permission.'
      operationId: repository-ruleset/deleted
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-ruleset-deleted'
      description: A repository ruleset was deleted.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: repository_ruleset
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
  member-added:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        in: header
        example: repository
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to collaborators
        in a repository. For more information, see "[Adding outside collaborators
        to repositories in your organization](https://docs.github.com/organizations/managing-user-access-to-your-organizations-repositories/adding-outside-collaborators-to-repositories-in-your-organization)."
        For more information about the API to manage repository collaborators, see
        [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#repositorycollaboratorconnection)
        or "[Collaborators](https://docs.github.com/rest/collaborators/collaborators)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-member-added'
      operationId: member/added
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A GitHub user accepted an invitation to a repository.
      x-github:
        subcategory: member
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
  pull-request-labeled:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
        name: User-Agent
      - example: 12312312
        schema:
          type: string
        in: header
        name: X-Github-Hook-Id
      - schema:
          type: string
        name: X-Github-Event
        in: header
        example: issues
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
        in: header
        example: 123123
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        name: X-GitHub-Delivery
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - schema:
          type: string
        name: X-Hub-Signature-256
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/labeled
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-labeled'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A label was added to a pull request.
      x-github:
        githubCloudOnly: false
        subcategory: pull_request
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
  sponsorship-tier-changed:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        in: header
        example: repository
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub Sponsors](https://docs.github.com/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more information,
        see "[Configuring webhooks for events in your sponsored account](https://docs.github.com/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#sponsorship
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-tier-changed'
      operationId: sponsorship/tier-changed
      description: A sponsor changed the tier of their sponsorship and the change
        has taken effect. If a sponsor upgraded their tier, the change took effect
        immediately. If a sponsor downgraded their tier, the change took effect at
        the beginning of the sponsor's next billing cycle.
      x-github:
        subcategory: sponsorship
        supported-webhook-types:
        - sponsors_listing
        category: webhooks
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  check-run-completed:
    post:
      parameters:
      - schema:
          type: string
        name: User-Agent
        in: header
        example: GitHub-Hookshot/123abc
      - name: X-Github-Hook-Id
        schema:
          type: string
        in: header
        example: 12312312
      - schema:
          type: string
        name: X-Github-Event
        in: header
        example: issues
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
        in: header
        example: 123123
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to a check run.
        For information about check runs, see "[Getting started with the Checks API](https://docs.github.com/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check runs, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#checkrun)
        or "[Check Runs](https://docs.github.com/rest/checks/runs)" in the REST API
        documentation.


        For activity relating to check suites, use the `check-suite` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Checks" repository permission. To receive the `rerequested` and `requested_action`
        event types, the app must have at least write-level access for the "Checks"
        permission. GitHub Apps with write-level access for the "Checks" permission
        are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the `created`
        and `completed` event types in repositories.


        > [!NOTE]

        > The API only looks for pushes in the repository where the check run was
        created. Pushes to a branch in a forked repository are not detected and return
        an empty `pull_requests` array and a `null` value for `head_branch`.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#check_run
      operationId: check-run/completed
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-check-run-completed-form-encoded'
            examples:
              default:
                $ref: '#/components/examples/check-run-completed-form-encoded'
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-run-completed'
            examples:
              default:
                $ref: '#/components/examples/check-run-completed'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A check run was completed, and a conclusion is available.
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: check_run
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
  pull-request-reopened:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - schema:
          type: string
        example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-reopened'
      operationId: pull-request/reopened
      description: A previously closed pull request was reopened.
      x-github:
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  deployment-review-rejected:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
        name: User-Agent
      - example: 12312312
        schema:
          type: string
        in: header
        name: X-Github-Hook-Id
      - schema:
          type: string
        name: X-Github-Event
        in: header
        example: issues
      - schema:
          type: string
        example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#deployment_review
      summary: 'This event occurs when there is activity relating to deployment reviews.
        For more information, see "[About deployments](https://docs.github.com/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#deployment)
        or "[Deployments](https://docs.github.com/rest/deployments/deployments)" in
        the REST API documentation.


        For activity relating to deployment creation or deployment status, use the
        `deployment` or `deployment_status` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Deployments" repository permission.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-review-rejected'
      operationId: deployment-review/rejected
      description: A deployment review was rejected.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: deployment_review
        category: webhooks
        supported-webhook-types:
        - app
  team-added-to-repository:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
        in: header
        example: repository
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to teams in an organization.

        For more information, see "[About teams](https://docs.github.com/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#team
      operationId: team/added-to-repository
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-added-to-repository'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: team
        supported-webhook-types:
        - organization
        - business
        - app
        category: webhooks
        githubCloudOnly: false
      description: A team was granted access to a repository.
  check-suite-requested:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        name: X-Github-Hook-Id
        in: header
        example: 12312312
      - schema:
          type: string
        example: issues
        in: header
        name: X-Github-Event
      - schema:
          type: string
        example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        name: X-GitHub-Delivery
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - schema:
          type: string
        name: X-Hub-Signature-256
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity relating to a check suite.
        For information about check suites, see "[Getting started with the Checks
        API](https://docs.github.com/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check suites, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#checksuite)
        or "[Check Suites](https://docs.github.com/rest/checks/suites)" in the REST
        API documentation.


        For activity relating to check runs, use the `check_run` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Checks" permission. To receive the `requested` and `rerequested`
        event types, the app must have at least write-level access for the "Checks"
        permission. GitHub Apps with write-level access for the "Checks" permission
        are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the `completed`
        event types in repositories.


        > [!NOTE]

        > The API only looks for pushes in the repository where the check suite was
        created. Pushes to a branch in a forked repository are not detected and return
        an empty `pull_requests` array and a `null` value for `head_branch`.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#check_suite
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-suite-requested'
      operationId: check-suite/requested
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: Someone requested to run a check suite. By default, check suites
        are automatically created when you create a check run. For more information,
        see [the GraphQL API documentation for creating a check run](https://docs.github.com/graphql/reference/mutations#createcheckrun)
        or "[Create a check run](https://docs.github.com/rest/checks/runs#create-a-check-run)"
        in the REST API documentation.
      x-github:
        githubCloudOnly: false
        subcategory: check_suite
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
  issues-unassigned:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
        in: header
        example: repository
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/unassigned
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-unassigned'
      description: A user was unassigned from an issue.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
  github-app-authorization-revoked:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        name: X-Github-Hook-Id
        in: header
        example: 12312312
      - schema:
          type: string
        name: X-Github-Event
        in: header
        example: issues
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      summary: 'This event occurs when a user revokes their authorization of a GitHub
        App. For more information, see "[About apps](https://docs.github.com/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the API to manage GitHub Apps, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#app) or "[Apps](https://docs.github.com/rest/apps)"
        in the REST API documentation.


        A GitHub App receives this webhook by default and cannot unsubscribe from
        this event.


        Anyone can revoke their authorization of a GitHub App from their [GitHub account
        settings page](https://github.com/settings/apps/authorizations). Revoking
        the authorization of a GitHub App does not uninstall the GitHub App. You should
        program your GitHub App so that when it receives this webhook, it stops calling
        the API on behalf of the person who revoked the token. If your GitHub App
        continues to use a revoked access token, it will receive the `401 Bad Credentials`
        error. For details about requests with a user access token, which require
        GitHub App authorization, see "[Authenticating with a GitHub App on behalf
        of a user](https://docs.github.com/apps/creating-github-apps/authenticating-with-a-github-app/authenticating-with-a-github-app-on-behalf-of-a-user)."'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#github_app_authorization
      operationId: github-app-authorization/revoked
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-github-app-authorization-revoked'
      description: Someone revoked their authorization of a GitHub App.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: github_app_authorization
        category: webhooks
        supported-webhook-types:
        - app
  issues-pinned:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - schema:
          type: string
        example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      operationId: issues/pinned
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-pinned'
      description: An issue was pinned to a repository. For more information, see
        "[Pinning an issue to your repository](https://docs.github.com/issues/tracking-your-work-with-issues/pinning-an-issue-to-your-repository)."
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
  workflow-job-waiting:
    post:
      parameters:
      - name: User-Agent
        schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
      - name: X-Github-Hook-Id
        schema:
          type: string
        in: header
        example: 12312312
      - name: X-Github-Event
        schema:
          type: string
        in: header
        example: issues
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
        in: header
        example: 123123
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        name: X-GitHub-Delivery
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - schema:
          type: string
        name: X-Hub-Signature-256
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#workflow_job
      summary: 'This event occurs when there is activity relating to a job in a GitHub
        Actions workflow. For more information, see "[Using jobs in a workflow](https://docs.github.com/actions/using-jobs/using-jobs-in-a-workflow)."
        For information about the API to manage workflow jobs, see "[Workflow jobs](https://docs.github.com/rest/actions/workflow-jobs)"
        in the REST API documentation.


        For activity relating to a workflow run instead of a job in a workflow run,
        use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Actions" repository permission.'
      operationId: workflow-job/waiting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-job-waiting'
      description: A job in a workflow run was created and is waiting for approvals.
      x-github:
        githubCloudOnly: false
        subcategory: workflow_job
        category: webhooks
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  pull-request-unassigned:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - schema:
          type: string
        example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-unassigned'
      operationId: pull-request/unassigned
      description: A user was unassigned from a pull request.
      x-github:
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  installation-target-renamed:
    post:
      parameters:
      - name: User-Agent
        schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
      - name: X-Github-Hook-Id
        schema:
          type: string
        in: header
        example: 12312312
      - schema:
          type: string
        example: issues
        in: header
        name: X-Github-Event
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
        name: X-Hub-Signature-256
      summary: This event occurs when there is activity relating to the user or organization
        account that a GitHub App is installed on. For more information, see "[About
        apps](https://docs.github.com/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#app) or "[Apps](https://docs.github.com/rest/apps)"
        in the REST API documentation.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#installation_target
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-target-renamed'
      operationId: installation-target/renamed
      description: Somebody renamed the user or organization account that a GitHub
        App is installed on.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: installation_target
        category: webhooks
        supported-webhook-types:
        - app
  projects-v2-status-update-created:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: project-v2-status-update
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
        in: header
        example: repository
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2_status_update
      summary: 'This event occurs when there is activity relating to a status update
        on an organization-level project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."


        For activity relating to a project, use the `projects_v2` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > To share feedback about projects webhooks with GitHub, see the [Projects
        webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      operationId: projects-v2-status-update/created
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-status-update-created'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: projects_v2_status_update
        supported-webhook-types:
        - organization
        category: webhooks
        githubCloudOnly: false
        enabledForGitHubApps: true
      description: A status update was added to a project in the organization.
  pull-request-opened:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - schema:
          type: string
        name: X-Github-Event
        in: header
        example: issues
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
        in: header
        example: 123123
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        name: X-GitHub-Delivery
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - schema:
          type: string
        name: X-Hub-Signature-256
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-opened'
      operationId: pull-request/opened
      description: A pull request was created
      x-github:
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: pull_request
        category: webhooks
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  watch-started:
    post:
      parameters:
      - in: header
        schema:
          type: string
        name: User-Agent
        example: GitHub-Hookshot/123abc
      - in: header
        schema:
          type: string
        name: X-Github-Hook-Id
        example: 12312312
      - in: header
        name: X-Github-Event
        schema:
          type: string
        example: issues
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        example: 123123
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - in: header
        name: X-GitHub-Delivery
        schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - in: header
        name: X-Hub-Signature-256
        schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity relating to watching, or
        subscribing to, a repository. For more information about watching, see "[Managing
        your subscriptions](https://docs.github.com/account-and-profile/managing-subscriptions-and-notifications-on-github/managing-subscriptions-for-activity-on-github/managing-your-subscriptions)."
        For information about the APIs to manage watching, see "[Watching](https://docs.github.com/rest/activity/watching)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#watch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-watch-started'
      operationId: watch/started
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: Someone started watching the repository.
      x-github:
        githubCloudOnly: false
        subcategory: watch
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
  check-run-rerequested:
    post:
      parameters:
      - schema:
          type: string
        in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
      - schema:
          type: string
        in: header
        name: X-Github-Hook-Id
        example: 12312312
      - schema:
          type: string
        in: header
        name: X-Github-Event
        example: issues
      - schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - schema:
          type: string
        in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity relating to a check run.
        For information about check runs, see "[Getting started with the Checks API](https://docs.github.com/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check runs, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#checkrun)
        or "[Check Runs](https://docs.github.com/rest/checks/runs)" in the REST API
        documentation.


        For activity relating to check suites, use the `check-suite` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Checks" repository permission. To receive the `rerequested` and `requested_action`
        event types, the app must have at least write-level access for the "Checks"
        permission. GitHub Apps with write-level access for the "Checks" permission
        are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the `created`
        and `completed` event types in repositories.


        > [!NOTE]

        > The API only looks for pushes in the repository where the check run was
        created. Pushes to a branch in a forked repository are not detected and return
        an empty `pull_requests` array and a `null` value for `head_branch`.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#check_run
      operationId: check-run/rerequested
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            examples:
              default:
                $ref: '#/components/examples/check-run-rerequested-form-encoded'
            schema:
              $ref: '#/components/schemas/webhook-check-run-rerequested-form-encoded'
          application/json:
            examples:
              default:
                $ref: '#/components/examples/check-run-rerequested'
            schema:
              $ref: '#/components/schemas/webhook-check-run-rerequested'
      description: Someone requested to re-run a check run. Only the GitHub App that
        someone requests to re-run the check will receive the `rerequested` payload.
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        subcategory: check_run
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  commit-comment-created:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
        in: header
        example: repository
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to commit comments.
        For more information about commit comments, see "[Commenting on a pull request](https://docs.github.com/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request)."
        For information about the APIs to manage commit comments, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#commitcomment)
        or "[Commit comments](https://docs.github.com/rest/commits/comments)" in the
        REST API documentation.


        For activity relating to comments on pull request reviews, use the `pull_request_review_comment`
        event. For activity relating to issue comments, use the `issue_comment` event.
        For activity relating to discussion comments, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#commit_comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-commit-comment-created'
      operationId: commit-comment/created
      description: Someone commented on a commit.
      x-github:
        githubCloudOnly: false
        subcategory: commit_comment
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  repository-vulnerability-alert-dismiss:
    post:
      parameters:
      - schema:
          type: string
        name: User-Agent
        in: header
        example: GitHub-Hookshot/123abc
      - schema:
          type: string
        name: X-Github-Hook-Id
        in: header
        example: 12312312
      - schema:
          type: string
        in: header
        name: X-Github-Event
        example: issues
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
        in: header
        example: 123123
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        name: X-GitHub-Delivery
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - schema:
          type: string
        name: X-Hub-Signature-256
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity relating to a security vulnerability
        alert in a repository.


        > [!WARNING]

        > **Closing down notice:** This event is closing down. Use the `dependabot_alert`
        event instead.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_vulnerability_alert
      operationId: repository-vulnerability-alert/dismiss
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-vulnerability-alert-dismiss'
      description: A repository vulnerability alert was dismissed.
      x-github:
        githubCloudOnly: false
        subcategory: repository_vulnerability_alert
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  team-deleted:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
        in: header
        example: repository
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to teams in an organization.

        For more information, see "[About teams](https://docs.github.com/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-deleted'
      operationId: team/deleted
      description: A team was deleted.
      x-github:
        githubCloudOnly: false
        subcategory: team
        supported-webhook-types:
        - organization
        - business
        - app
        category: webhooks
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  organization-member-added:
    post:
      parameters:
      - schema:
          type: string
        in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
      - schema:
          type: string
        in: header
        name: X-Github-Hook-Id
        example: 12312312
      - schema:
          type: string
        name: X-Github-Event
        in: header
        example: issues
      - schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - schema:
          type: string
        in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#organization
      summary: 'This event occurs when there is activity relating to an organization
        and its members. For more information, see "[About organizations](https://docs.github.com/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#organization)
        or "[Organizations](https://docs.github.com/rest/orgs)" in the REST API documentation.


        If you want to receive an event when a non-member is blocked or unblocked
        from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-member-added'
      operationId: organization/member-added
      description: A member accepted an invitation to join an organization.
      x-github:
        githubCloudOnly: false
        subcategory: organization
        category: webhooks
        supported-webhook-types:
        - organization
        - business
        - app
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  label-edited:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
        in: header
        example: repository
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#label
      summary: 'This event occurs when there is activity relating to labels. For more
        information, see "[Managing labels](https://docs.github.com/issues/using-labels-and-milestones-to-track-work/managing-labels)."
        For information about the APIs to manage labels, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#label)
        or "[Labels](https://docs.github.com/rest/issues/labels)" in the REST API
        documentation.


        If you want to receive an event when a label is added to or removed from an
        issue, pull request, or discussion, use the `labeled` or `unlabeled` action
        type for the `issues`, `pull_request`, or `discussion` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      operationId: label/edited
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-label-edited'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: label
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
      description: A label's name, description, or color was changed.
  workflow-dispatch:
    post:
      parameters:
      - schema:
          type: string
        name: User-Agent
        in: header
        example: GitHub-Hookshot/123abc
      - schema:
          type: string
        name: X-Github-Hook-Id
        in: header
        example: 12312312
      - schema:
          type: string
        name: X-Github-Event
        in: header
        example: issues
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
        in: header
        example: 123123
      - in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
      - schema:
          type: string
        name: X-GitHub-Delivery
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - schema:
          type: string
        name: X-Hub-Signature-256
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when a GitHub Actions workflow is manually triggered.
        For more information, see "[Manually running a workflow](https://docs.github.com/actions/managing-workflow-runs/manually-running-a-workflow)."


        For activity relating to workflow runs, use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#workflow_dispatch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-dispatch'
      operationId: workflow-dispatch
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: workflow_dispatch
        category: webhooks
        supported-webhook-types:
        - app
  repository-edited:
    post:
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - in: header
        name: X-Github-Event
        example: issues
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
        in: header
        example: repository
      - in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
      - in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository
      summary: 'This event occurs when there is activity relating to repositories.
        For more information, see "[About repositories](https://docs.github.com/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#repository)
        or "[Repositories](https://docs.github.com/rest/repos)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-edited'
      operationId: repository/edited
      description: The topics, default branch, description, or homepage of a repository
        was changed.
      x-github:
        githubCloudOnly: false
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
        category: webhooks
        subcategory: repository
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  code-scanning-alert-fixed:
    post:
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Id
        example: 12312312
        in: header
        schema:
          type: string
      - name: X-Github-Event
        example: issues
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        in: header
        schema:
          type: string
      - schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Type
        example: repository
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code scanning](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning alerts](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code scanning](https://docs.github.com/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Code scanning alerts" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#code_scanning_alert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-fixed'
        required: true
      operationId: code-scanning-alert/fixed
      description: A code scanning alert was fixed in a branch by a commit.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: code_scanning_alert
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
  merge-group-checks-requested:
    post:
      tags:
      - merge-queue
      parameters:
      - example: GitHub-Hookshot/123abc
        name: User-Agent
        in: header
        schema:
          type: string
      - example: 12312312
        schema:
          type: string
        in: header
        name: X-Github-Hook-Id
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
        in: header
        example: repository
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#merge_group
      summary: 'This event occurs when there is activity relating to a merge group
        in a merge queue. For more information, see "[Managing a merge queue](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Merge queues" repository permission.'
      operationId: merge-group/checks-requested
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-merge-group-checks-requested'
        required: true
      description: 'Status checks were requested for a merge group. This happens when
        a merge group is created or added to by the merge queue because a pull request
        was queued.


        When you receive this event, you should perform checks on the head SHA and
        report status back using check runs or commit statuses.'
      x-github:
        githubCloudOnly: false
        subcategory: merge_group
        supported-webhook-types:
        - app
        category: webhooks
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  issues-milestoned:
    post:
      parameters:
      - schema:
          type: string
        name: User-Agent
        in: header
        example: GitHub-Hookshot/123abc
      - schema:
          type: string
        name: X-Github-Hook-Id
        in: header
        example: 12312312
      - schema:
          type: string
        in: header
        name: X-Github-Event
        example: issues
      - schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        in: header
        example: repository
      - schema:
          type: string
        in: header
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - schema:
          type: string
        in: header
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-milestoned'
        required: true
      operationId: issues/milestoned
      description: An issue was added to a milestone.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
  dependabot-alert-dismissed:
    post:
      parameters:
      - in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
        schema:
          type: string
      - in: header
        example: 12312312
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        in: header
        example: repository
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#dependabot_alert
      summary: 'This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot alerts](https://docs.github.com/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see "[Dependabot
        alerts](https://docs.github.com/rest/dependabot/alerts)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Dependabot alerts" repository permission.


        > [!NOTE]

        > Webhook events for Dependabot alerts are currently in public preview and
        subject to change.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-dismissed'
        required: true
      operationId: dependabot-alert/dismissed
      description: A Dependabot alert was manually closed.
      x-github:
        githubCloudOnly: false
        subcategory: dependabot_alert
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  deployment-review-approved:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - name: X-Github-Event
        example: issues
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        in: header
        example: 123123
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - name: X-GitHub-Delivery
        schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - name: X-Hub-Signature-256
        schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity relating to deployment reviews.
        For more information, see "[About deployments](https://docs.github.com/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#deployment)
        or "[Deployments](https://docs.github.com/rest/deployments/deployments)" in
        the REST API documentation.


        For activity relating to deployment creation or deployment status, use the
        `deployment` or `deployment_status` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Deployments" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#deployment_review
      operationId: deployment-review/approved
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-review-approved'
        required: true
      description: A deployment review was approved.
      x-github:
        subcategory: deployment_review
        supported-webhook-types:
        - app
        category: webhooks
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  milestone-opened:
    post:
      parameters:
      - in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
        schema:
          type: string
      - in: header
        example: 12312312
        name: X-Github-Hook-Id
        schema:
          type: string
      - in: header
        example: issues
        name: X-Github-Event
        schema:
          type: string
      - in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Type
        example: repository
        in: header
        schema:
          type: string
      - in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        schema:
          type: string
      - in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to milestones. For
        more information, see "[About milestones](https://docs.github.com/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#milestone)
        or "[Milestones](https://docs.github.com/rest/issues/milestones)" in the REST
        API documentation.


        If you want to receive an event when an issue or pull request is added to
        or removed from a milestone, use the `milestoned` or `demilestoned` action
        type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" or "Pull requests" repository permissions.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#milestone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-opened'
        required: true
      operationId: milestone/opened
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: milestone
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
      description: A milestone was opened.
  marketplace-purchase-changed:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - example: issues
        name: X-Github-Event
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        in: header
        example: 123123
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - name: X-GitHub-Delivery
        schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - name: X-Hub-Signature-256
        schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: This event occurs when there is activity relating to a GitHub Marketplace
        purchase. For more information, see "[GitHub Marketplace](https://docs.github.com/marketplace)."
        For information about the APIs to manage GitHub Marketplace listings, see
        [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#marketplacelisting)
        or "[GitHub Marketplace](https://docs.github.com/rest/apps/marketplace)" in
        the REST API documentation.
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#marketplace_purchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-marketplace-purchase-changed'
        required: true
      operationId: marketplace-purchase/changed
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: Someone upgraded or downgraded a GitHub Marketplace plan, and the
        last billing cycle has ended. The change will take effect on the account immediately.
      x-github:
        subcategory: marketplace_purchase
        supported-webhook-types:
        - marketplace
        category: webhooks
        githubCloudOnly: false
  branch-protection-rule-created:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
        in: header
        example: repository
      - in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        schema:
          type: string
      - in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to branch protection
        rules. For more information, see "[About protected branches](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches)."
        For information about the APIs to manage branch protection rules, see [the
        GraphQL documentation](https://docs.github.com/graphql/reference/objects#branchprotectionrule)
        or "[Branch protection](https://docs.github.com/rest/branches/branch-protection)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#branch_protection_rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-branch-protection-rule-created'
        required: true
      operationId: branch-protection-rule/created
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        subcategory: branch_protection_rule
      description: A branch protection rule was created.
  issues-demilestoned:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        name: User-Agent
        in: header
        schema:
          type: string
      - example: 12312312
        name: X-Github-Hook-Id
        in: header
        schema:
          type: string
      - schema:
          type: string
        name: X-Github-Event
        in: header
        example: issues
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
        in: header
        example: 123123
      - in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - schema:
          type: string
        name: X-GitHub-Delivery
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - schema:
          type: string
        name: X-Hub-Signature-256
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-demilestoned'
        required: true
      operationId: issues/demilestoned
      description: An issue was removed from a milestone.
      x-github:
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  discussion-edited:
    post:
      parameters:
      - in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
        schema:
          type: string
      - in: header
        example: 12312312
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
        in: header
        example: repository
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      operationId: discussion/edited
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-edited'
        required: true
      description: The title or body on a discussion was edited, or the category of
        the discussion was changed.
      x-github:
        githubCloudOnly: false
        subcategory: discussion
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  secret-scanning-alert-validated:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
        name: User-Agent
      - example: 12312312
        schema:
          type: string
        in: header
        name: X-Github-Hook-Id
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        in: header
        example: 123123
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - name: X-GitHub-Delivery
        schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - name: X-Hub-Signature-256
        schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret scanning](https://docs.github.com/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see "[Secret
        scanning](https://docs.github.com/rest/secret-scanning)" in the REST API documentation.


        For activity relating to secret scanning alert locations, use the `secret_scanning_alert_location`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Secret scanning alerts" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#secret_scanning_alert
      operationId: secret-scanning-alert/validated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-validated'
        required: true
      description: A secret scanning alert was validated.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: secret_scanning_alert
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
  personal-access-token-request-cancelled:
    post:
      parameters:
      - in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
        schema:
          type: string
      - in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        schema:
          type: string
      - in: header
        example: personal_access_token_request
        name: X-Github-Event
        schema:
          type: string
      - in: header
        example: 12312312
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: 123123
        name: X-Github-Hook-Installation-Target-Id
        in: header
        schema:
          type: string
      - in: header
        example: integration
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#personal_access_token_request
      summary: 'This event occurs when there is activity relating to a request for
        a fine-grained personal access token to access resources that belong to a
        resource owner that requires approval for token access. For more information,
        see "[Creating a personal access token](https://docs.github.com/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Personal access token requests" organization permission.


        > [!NOTE]

        > Fine-grained PATs are in public preview. Related APIs, events, and functionality
        are subject to change.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-personal-access-token-request-cancelled'
        required: true
      operationId: personal-access-token-request/cancelled
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: personal_access_token_request
        category: webhooks
        supported-webhook-types:
        - app
      description: A fine-grained personal access token request was cancelled by the
        requester.
  issues-labeled:
    post:
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Id
        example: 12312312
        in: header
        schema:
          type: string
      - name: X-Github-Event
        example: issues
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        in: header
        example: 123123
      - in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - name: X-GitHub-Delivery
        schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - name: X-Hub-Signature-256
        schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-labeled'
        required: true
      operationId: issues/labeled
      description: A label was added to an issue.
      x-github:
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  repository-publicized:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to repositories.
        For more information, see "[About repositories](https://docs.github.com/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#repository)
        or "[Repositories](https://docs.github.com/rest/repos)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-publicized'
        required: true
      operationId: repository/publicized
      description: The visibility of a repository was changed to `public`.
      x-github:
        githubCloudOnly: false
        subcategory: repository
        category: webhooks
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  repository-unarchived:
    post:
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Id
        example: 12312312
        in: header
        schema:
          type: string
      - name: X-Github-Event
        schema:
          type: string
        in: header
        example: issues
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        in: header
        example: 123123
      - in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - name: X-GitHub-Delivery
        schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - name: X-Hub-Signature-256
        schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository
      summary: 'This event occurs when there is activity relating to repositories.
        For more information, see "[About repositories](https://docs.github.com/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#repository)
        or "[Repositories](https://docs.github.com/rest/repos)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      operationId: repository/unarchived
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-unarchived'
        required: true
      description: A previously archived repository was unarchived.
      x-github:
        subcategory: repository
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  discussion-unlocked:
    post:
      parameters:
      - in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
        schema:
          type: string
      - in: header
        example: 12312312
        name: X-Github-Hook-Id
        schema:
          type: string
      - in: header
        example: issues
        name: X-Github-Event
        schema:
          type: string
      - in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Type
        example: repository
        in: header
        schema:
          type: string
      - in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        schema:
          type: string
      - in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-unlocked'
        required: true
      operationId: discussion/unlocked
      description: A discussion was unlocked.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: discussion
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
  team-edited:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
        name: User-Agent
      - example: 12312312
        schema:
          type: string
        in: header
        name: X-Github-Hook-Id
      - name: X-Github-Event
        schema:
          type: string
        in: header
        example: issues
      - schema:
          type: string
        example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to teams in an organization.

        For more information, see "[About teams](https://docs.github.com/organizations/organizing-members-into-teams/about-teams)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#team
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-team-edited'
        required: true
      operationId: team/edited
      description: The name, description, or visibility of a team was changed.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: team
        supported-webhook-types:
        - organization
        - business
        - app
        category: webhooks
        githubCloudOnly: false
  repository-vulnerability-alert-reopen:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
        in: header
        example: repository
      - in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        schema:
          type: string
      - in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to a security vulnerability
        alert in a repository.


        > [!WARNING]

        > **Closing down notice:** This event is closing down. Use the `dependabot_alert`
        event instead.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_vulnerability_alert
      operationId: repository-vulnerability-alert/reopen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-vulnerability-alert-reopen'
        required: true
      description: A previously dismissed or resolved repository vulnerability alert
        was reopened.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: repository_vulnerability_alert
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
  membership-removed:
    post:
      parameters:
      - schema:
          type: string
        name: User-Agent
        in: header
        example: GitHub-Hookshot/123abc
      - schema:
          type: string
        name: X-Github-Hook-Id
        in: header
        example: 12312312
      - schema:
          type: string
        example: issues
        in: header
        name: X-Github-Event
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
        in: header
        example: 123123
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - schema:
          type: string
        name: X-GitHub-Delivery
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - schema:
          type: string
        name: X-Hub-Signature-256
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#membership
      summary: 'This event occurs when there is activity relating to team membership.
        For more information, see "[About teams](https://docs.github.com/organizations/organizing-members-into-teams/about-teams)."
        For more information about the APIs to manage team memberships, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#team)
        or "[Team members](https://docs.github.com/rest/teams/members)" in the REST
        API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-membership-removed'
        required: true
      operationId: membership/removed
      description: An organization member was removed from a team.
      x-github:
        subcategory: membership
        supported-webhook-types:
        - organization
        - business
        - app
        category: webhooks
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  page-build:
    post:
      parameters:
      - in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
        schema:
          type: string
      - in: header
        example: 12312312
        name: X-Github-Hook-Id
        schema:
          type: string
      - in: header
        example: issues
        name: X-Github-Event
        schema:
          type: string
      - in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        schema:
          type: string
      - in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        schema:
          type: string
      summary: 'This event occurs when there is an attempted build of a GitHub Pages
        site. This event occurs regardless of whether the build is successful. For
        more information, see "[Configuring a publishing source for your GitHub Pages
        site](https://docs.github.com/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site)."
        For information about the API to manage GitHub Pages, see "[Pages](https://docs.github.com/rest/pages)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pages" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#page_build
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-page-build'
        required: true
      operationId: page-build
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        subcategory: page_build
  discussion-comment-deleted:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - example: issues
        name: X-Github-Event
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        in: header
        example: 123123
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - name: X-GitHub-Delivery
        schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - name: X-Hub-Signature-256
        schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity relating to a comment on
        a discussion. For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a discussion as opposed to comments on a discussion,
        use the `discussion` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion_comment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-comment-deleted'
        required: true
      operationId: discussion-comment/deleted
      description: A comment on a discussion was deleted.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: discussion_comment
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        category: webhooks
  deployment-protection-rule-requested:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - schema:
          type: string
        example: issues
        in: header
        name: X-Github-Event
      - schema:
          type: string
        example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to deployment protection
        rules. For more information, see "[Using environments for deployment](https://docs.github.com/actions/deployment/targeting-different-environments/using-environments-for-deployment#environment-protection-rules)."
        For information about the API to manage deployment protection rules, see [the
        REST API documentation](https://docs.github.com/rest/deployments/environments).


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Deployments" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#deployment_protection_rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-protection-rule-requested'
        required: true
      operationId: deployment-protection-rule/requested
      description: A deployment protection rule was requested for an environment.
      x-github:
        subcategory: deployment_protection_rule
        supported-webhook-types:
        - app
        category: webhooks
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  registry-package-updated:
    post:
      parameters:
      - in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
        schema:
          type: string
      - in: header
        example: 12312312
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - schema:
          type: string
        example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        schema:
          type: string
      - in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#registry_package
      summary: 'This event occurs when there is activity relating to GitHub Packages.
        For more information, see "[Introduction to GitHub Packages](https://docs.github.com/packages/learn-github-packages/introduction-to-github-packages)."
        For information about the APIs to manage GitHub Packages, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#package)
        or "[Packages](https://docs.github.com/rest/packages)" in the REST API documentation.


        To install this event on a GitHub App, the app must have at least read-level
        access for the "Packages" repository permission.


        > [!NOTE]

        > GitHub recommends that you use the newer `package` event instead.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-registry-package-updated'
        required: true
      operationId: registry-package/updated
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: registry_package
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        category: webhooks
      description: A package that was previously published to a registry was updated.
  dependabot-alert-fixed:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - schema:
          type: string
        example: issues
        name: X-Github-Event
        in: header
      - schema:
          type: string
        example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#dependabot_alert
      summary: 'This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot alerts](https://docs.github.com/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see "[Dependabot
        alerts](https://docs.github.com/rest/dependabot/alerts)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Dependabot alerts" repository permission.


        > [!NOTE]

        > Webhook events for Dependabot alerts are currently in public preview and
        subject to change.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-fixed'
        required: true
      operationId: dependabot-alert/fixed
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: dependabot_alert
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
      description: A manifest file change removed a vulnerability.
  pull-request-unlocked:
    post:
      parameters:
      - in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
        schema:
          type: string
      - in: header
        example: 12312312
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - schema:
          type: string
        example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-unlocked'
        required: true
      operationId: pull-request/unlocked
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        category: webhooks
      description: Conversation on a pull request was unlocked. For more information,
        see "[Locking conversations](https://docs.github.com/communities/moderating-comments-and-conversations/locking-conversations)."
  project-created:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - schema:
          type: string
        example: issues
        name: X-Github-Event
        in: header
      - schema:
          type: string
        example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to a project (classic).
        For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a card or column on a project (classic), use the
        `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project
      operationId: project/created
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-created'
        required: true
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A project (classic) was created.
      x-github:
        subcategory: project
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
  branch-protection-configuration-disabled:
    post:
      parameters:
      - in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
        schema:
          type: string
      - in: header
        example: 12312312
        name: X-Github-Hook-Id
        schema:
          type: string
      - in: header
        example: issues
        name: X-Github-Event
        schema:
          type: string
      - in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - schema:
          type: string
        example: repository
        name: X-Github-Hook-Installation-Target-Type
        in: header
      - in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        schema:
          type: string
      - in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        schema:
          type: string
      summary: 'This event occurs when there is a change to branch protection configurations
        for a repository.

        For more information, see "[About protected branches](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches)."

        For information about using the APIs to manage branch protection rules, see
        "[Branch protection rule](https://docs.github.com/graphql/reference/objects#branchprotectionrule)"
        in the GraphQL documentation or "[Branch protection](https://docs.github.com/rest/branches/branch-protection)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#branch_protection_configuration
      operationId: branch-protection-configuration/disabled
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-branch-protection-configuration-disabled'
        required: true
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: All branch protections were disabled for a repository.
      x-github:
        subcategory: branch_protection_configuration
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        category: webhooks
  discussion-comment-edited:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - schema:
          type: string
        example: issues
        in: header
        name: X-Github-Event
      - schema:
          type: string
        example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion_comment
      summary: 'This event occurs when there is activity relating to a comment on
        a discussion. For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a discussion as opposed to comments on a discussion,
        use the `discussion` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-comment-edited'
        required: true
      operationId: discussion-comment/edited
      description: A comment on a discussion was edited.
      x-github:
        subcategory: discussion_comment
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  security-advisory-published:
    post:
      parameters:
      - in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
        schema:
          type: string
      - in: header
        example: 12312312
        name: X-Github-Hook-Id
        schema:
          type: string
      - in: header
        example: issues
        name: X-Github-Event
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - schema:
          type: string
        example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#security_advisory
      summary: 'This event occurs when there is activity relating to a global security
        advisory that was reviewed by GitHub. A GitHub-reviewed global security advisory
        provides information about security vulnerabilities or malware that have been
        mapped to packages in ecosystems we support. For more information about global
        security advisories, see "[About global security advisories](https://docs.github.com/code-security/security-advisories/working-with-global-security-advisories-from-the-github-advisory-database/about-global-security-advisories)."
        For information about the API to manage security advisories, see [the REST
        API documentation](https://docs.github.com/rest/security-advisories/global-advisories)
        or [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#securityadvisory).


        GitHub Dependabot alerts are also powered by the security advisory dataset.
        For more information, see "[About Dependabot alerts](https://docs.github.com/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."'
      operationId: security-advisory/published
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-security-advisory-published'
        required: true
      description: A security advisory was published to the GitHub community.
      x-github:
        subcategory: security_advisory
        supported-webhook-types:
        - app
        githubCloudOnly: false
        category: webhooks
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  pull-request-review-request-removed:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        name: User-Agent
        in: header
      - schema:
          type: string
        example: 12312312
        name: X-Github-Hook-Id
        in: header
      - schema:
          type: string
        example: issues
        name: X-Github-Event
        in: header
      - schema:
          type: string
        example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      operationId: pull-request/review-request-removed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-request-removed'
        required: true
      description: A request for review by a person or team was removed from a pull
        request.
      x-github:
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  meta-deleted:
    post:
      parameters:
      - in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
        schema:
          type: string
      - in: header
        example: 12312312
        name: X-Github-Hook-Id
        schema:
          type: string
      - in: header
        example: issues
        name: X-Github-Event
        schema:
          type: string
      - in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - schema:
          type: string
        example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        schema:
          type: string
      - in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to a webhook itself.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Meta" app permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#meta
      operationId: meta/deleted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-meta-deleted'
        required: true
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: The webhook was deleted.
      x-github:
        subcategory: meta
        supported-webhook-types:
        - marketplace
        - business
        - repository
        - organization
        - app
        githubCloudOnly: false
        category: webhooks
  projects-v2-item-edited:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - schema:
          type: string
        example: project-v2-item
        in: header
        name: X-Github-Event
      - schema:
          type: string
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
        in: header
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        in: header
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        in: header
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2_item
      summary: 'This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project), use
        the `projects_v2` event. For activity relating to Projects (classic), use
        the `project`, `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-edited'
        required: true
      operationId: projects-v2-item/edited
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: projects_v2_item
        enabledForGitHubApps: true
        supported-webhook-types:
        - organization
        category: webhooks
        githubCloudOnly: false
      description: The values or state of an item in an organization project were
        changed. For example, the value of a field was updated, the body of a draft
        issue was changed, or a draft issue was converted to an issue.
  package-published:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - in: header
        example: issues
        name: X-Github-Event
        schema:
          type: string
      - in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - schema:
          type: string
        example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        schema:
          type: string
      - in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to GitHub Packages.
        For more information, see "[Introduction to GitHub Packages](https://docs.github.com/packages/learn-github-packages/introduction-to-github-packages)."
        For information about the APIs to manage GitHub Packages, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#package)
        or "[Packages](https://docs.github.com/rest/packages)" in the REST API documentation.


        To install this event on a GitHub App, the app must have at least read-level
        access for the "Packages" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#package
      operationId: package/published
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-package-published'
        required: true
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A package was published to a registry.
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: package
        githubCloudOnly: false
  project-column-deleted:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - schema:
          type: string
        example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to a column on a
        project (classic). For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a project (classic) or a card on a project (classic),
        use the `project` and `project_card` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project_column
      operationId: project-column/deleted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-column-deleted'
        required: true
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: project_column
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        category: webhooks
      description: A column was deleted from a project (classic).
  label-deleted:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - schema:
          type: string
        example: issues
        in: header
        name: X-Github-Event
      - schema:
          type: string
        example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#label
      summary: 'This event occurs when there is activity relating to labels. For more
        information, see "[Managing labels](https://docs.github.com/issues/using-labels-and-milestones-to-track-work/managing-labels)."
        For information about the APIs to manage labels, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#label)
        or "[Labels](https://docs.github.com/rest/issues/labels)" in the REST API
        documentation.


        If you want to receive an event when a label is added to or removed from an
        issue, pull request, or discussion, use the `labeled` or `unlabeled` action
        type for the `issues`, `pull_request`, or `discussion` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-label-deleted'
        required: true
      operationId: label/deleted
      description: A label was deleted.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: label
        githubCloudOnly: false
  issue-comment-deleted:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - schema:
          type: string
        example: repository
        name: X-Github-Hook-Installation-Target-Type
        in: header
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issue_comment
      summary: 'This event occurs when there is activity relating to a comment on
        an issue or pull request. For more information about issues and pull requests,
        see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)"
        and "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage issue comments, see [the GraphQL
        documentation](https://docs.github.com/graphql/reference/objects#issuecomment)
        or "[Issue comments](https://docs.github.com/rest/issues/comments)" in the
        REST API documentation.


        For activity relating to an issue as opposed to comments on an issue, use
        the `issue` event. For activity related to pull request reviews or pull request
        review comments, use the `pull_request_review` or `pull_request_review_comment`
        events. For more information about the different types of pull request comments,
        see "[Working with comments](https://docs.github.com/rest/guides/working-with-comments)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      operationId: issue-comment/deleted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issue-comment-deleted'
        required: true
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A comment on an issue or pull request was deleted.
      x-github:
        subcategory: issue_comment
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        category: webhooks
  code-scanning-alert-reopened-by-user:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - schema:
          type: string
        example: issues
        name: X-Github-Event
        in: header
      - schema:
          type: string
        example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code scanning](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning alerts](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code scanning](https://docs.github.com/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Code scanning alerts" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#code_scanning_alert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-reopened-by-user'
        required: true
      operationId: code-scanning-alert/reopened-by-user
      description: Someone reopened a code scanning alert.
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: code_scanning_alert
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  gollum:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - schema:
          type: string
        example: repository
        name: X-Github-Hook-Installation-Target-Type
        in: header
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      summary: 'This event occurs when someone creates or updates a wiki page. For
        more information, see "[About wikis](https://docs.github.com/communities/documenting-your-project-with-wikis/about-wikis)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#gollum
      operationId: gollum
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-gollum'
        required: true
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: gollum
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        category: webhooks
  workflow-job-in-progress:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - schema:
          type: string
        example: issues
        in: header
        name: X-Github-Event
      - schema:
          type: string
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        in: header
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        in: header
      summary: 'This event occurs when there is activity relating to a job in a GitHub
        Actions workflow. For more information, see "[Using jobs in a workflow](https://docs.github.com/actions/using-jobs/using-jobs-in-a-workflow)."
        For information about the API to manage workflow jobs, see "[Workflow jobs](https://docs.github.com/rest/actions/workflow-jobs)"
        in the REST API documentation.


        For activity relating to a workflow run instead of a job in a workflow run,
        use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Actions" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#workflow_job
      operationId: workflow-job/in-progress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-job-in-progress'
        required: true
      description: A job in a workflow run started processing on a runner.
      x-github:
        githubCloudOnly: false
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
        category: webhooks
        subcategory: workflow_job
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  milestone-closed:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - name: X-Github-Event
        in: header
        example: issues
        schema:
          type: string
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#milestone
      summary: 'This event occurs when there is activity relating to milestones. For
        more information, see "[About milestones](https://docs.github.com/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#milestone)
        or "[Milestones](https://docs.github.com/rest/issues/milestones)" in the REST
        API documentation.


        If you want to receive an event when an issue or pull request is added to
        or removed from a milestone, use the `milestoned` or `demilestoned` action
        type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" or "Pull requests" repository permissions.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-closed'
        required: true
      operationId: milestone/closed
      description: A milestone was closed.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        subcategory: milestone
  pull-request-auto-merge-disabled:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        name: User-Agent
        in: header
        schema:
          type: string
      - example: 12312312
        name: X-Github-Hook-Id
        in: header
        schema:
          type: string
      - example: issues
        name: X-Github-Event
        in: header
        schema:
          type: string
      - example: 123123
        name: X-Github-Hook-Installation-Target-Id
        in: header
        schema:
          type: string
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        in: header
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        in: header
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-auto-merge-disabled'
        required: true
      operationId: pull-request/auto-merge-disabled
      description: Auto merge was disabled for a pull request. For more information,
        see "[Automatically merging a pull request](https://docs.github.com/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request)."
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: pull_request
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  discussion-unpinned:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
        in: header
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      operationId: discussion/unpinned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-unpinned'
        required: true
      description: A discussion was unpinned.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        subcategory: discussion
  pull-request-review-thread-unresolved:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        name: User-Agent
        schema:
          type: string
        in: header
      - example: 12312312
        name: X-Github-Hook-Id
        schema:
          type: string
        in: header
      - example: issues
        name: X-Github-Event
        in: header
        schema:
          type: string
      - example: 123123
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        name: X-GitHub-Delivery
        in: header
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        name: X-Hub-Signature-256
        in: header
      summary: 'This event occurs when there is activity relating to a comment thread
        on a pull request. For more information, see "[About pull request reviews](https://docs.github.com/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#pullrequestreviewthread)
        or "[Pull request review comments](https://docs.github.com/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request review comments, pull request comments,
        or pull request reviews, use the `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request_review_thread
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-thread-unresolved'
        required: true
      operationId: pull-request-review-thread/unresolved
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: pull_request_review_thread
        githubCloudOnly: false
      description: A previously resolved comment thread on a pull request was marked
        as unresolved.
  code-scanning-alert-appeared-in-branch:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
        in: header
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code scanning](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning alerts](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code scanning](https://docs.github.com/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Code scanning alerts" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#code_scanning_alert
      operationId: code-scanning-alert/appeared-in-branch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-appeared-in-branch'
        required: true
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        subcategory: code_scanning_alert
      description: A previously created code scanning alert appeared in another branch.
        This can happen when a branch is merged into or created from a branch with
        a pre-existing code scanning alert.
  installation-suspend:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        schema:
          type: string
        name: User-Agent
        in: header
      - example: 12312312
        schema:
          type: string
        name: X-Github-Hook-Id
        in: header
      - example: issues
        name: X-Github-Event
        in: header
        schema:
          type: string
      - example: 123123
        name: X-Github-Hook-Installation-Target-Id
        in: header
        schema:
          type: string
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        in: header
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        in: header
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot manually
        subscribe to this event.


        For more information about GitHub Apps, see "[About apps](https://docs.github.com/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#app) or "[Apps](https://docs.github.com/rest/apps)"
        in the REST API documentation.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#installation
      operationId: installation/suspend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-suspend'
        required: true
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        supported-webhook-types:
        - app
        subcategory: installation
        githubCloudOnly: false
      description: Someone blocked access by a GitHub App to their user or organization
        account.
  sponsorship-pending-tier-change:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#sponsorship
      summary: 'This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub Sponsors](https://docs.github.com/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more information,
        see "[Configuring webhooks for events in your sponsored account](https://docs.github.com/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."'
      operationId: sponsorship/pending-tier-change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-pending-tier-change'
        required: true
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        supported-webhook-types:
        - sponsors_listing
        category: webhooks
        subcategory: sponsorship
      description: A sponsor scheduled a downgrade to a lower sponsorship tier. The
        new tier will become effective on their next billing date.
  security-advisory-updated:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        name: User-Agent
        schema:
          type: string
        in: header
      - example: 12312312
        name: X-Github-Hook-Id
        schema:
          type: string
        in: header
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to a global security
        advisory that was reviewed by GitHub. A GitHub-reviewed global security advisory
        provides information about security vulnerabilities or malware that have been
        mapped to packages in ecosystems we support. For more information about global
        security advisories, see "[About global security advisories](https://docs.github.com/code-security/security-advisories/working-with-global-security-advisories-from-the-github-advisory-database/about-global-security-advisories)."
        For information about the API to manage security advisories, see [the REST
        API documentation](https://docs.github.com/rest/security-advisories/global-advisories)
        or [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#securityadvisory).


        GitHub Dependabot alerts are also powered by the security advisory dataset.
        For more information, see "[About Dependabot alerts](https://docs.github.com/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#security_advisory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-security-advisory-updated'
        required: true
      operationId: security-advisory/updated
      description: The metadata or description of a security advisory was changed.
      x-github:
        category: webhooks
        supported-webhook-types:
        - app
        subcategory: security_advisory
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  issues-transferred:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        name: X-Github-Hook-Installation-Target-Type
        in: header
        schema:
          type: string
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-transferred'
        required: true
      operationId: issues/transferred
      description: An issue was transferred to another repository. For more information,
        see "[Transferring an issue to another repository](https://docs.github.com/issues/tracking-your-work-with-issues/transferring-an-issue-to-another-repository)."
      x-github:
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        subcategory: issues
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  check-run-requested-action:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        name: User-Agent
        schema:
          type: string
        in: header
      - example: 12312312
        name: X-Github-Hook-Id
        schema:
          type: string
        in: header
      - example: issues
        name: X-Github-Event
        schema:
          type: string
        in: header
      - example: 123123
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        schema:
          type: string
        in: header
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        schema:
          type: string
        in: header
      summary: 'This event occurs when there is activity relating to a check run.
        For information about check runs, see "[Getting started with the Checks API](https://docs.github.com/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check runs, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#checkrun)
        or "[Check Runs](https://docs.github.com/rest/checks/runs)" in the REST API
        documentation.


        For activity relating to check suites, use the `check-suite` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Checks" repository permission. To receive the `rerequested` and `requested_action`
        event types, the app must have at least write-level access for the "Checks"
        permission. GitHub Apps with write-level access for the "Checks" permission
        are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the `created`
        and `completed` event types in repositories.


        > [!NOTE]

        > The API only looks for pushes in the repository where the check run was
        created. Pushes to a branch in a forked repository are not detected and return
        an empty `pull_requests` array and a `null` value for `head_branch`.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#check_run
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/webhook-check-run-requested-action-form-encoded'
            examples:
              default:
                $ref: '#/components/examples/check-run-requested-action-form-encoded'
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-run-requested-action'
            examples:
              default:
                $ref: '#/components/examples/check-run-requested-action'
        required: true
      operationId: check-run/requested-action
      description: A check run completed, and someone requested a followup action
        that your app provides. Only the GitHub App someone requests to perform an
        action will receive the `requested_action` payload. For more information,
        see "[Creating CI tests with the Checks API](https://docs.github.com/developers/apps/guides/creating-ci-tests-with-the-checks-api)."
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        enabledForGitHubApps: true
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: check_run
        githubCloudOnly: false
  projects-v2-item-restored:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: project-v2-item
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
        in: header
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project), use
        the `projects_v2` event. For activity relating to Projects (classic), use
        the `project`, `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2_item
      operationId: projects-v2-item/restored
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-restored'
        required: true
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        supported-webhook-types:
        - organization
        category: webhooks
        subcategory: projects_v2_item
      description: An archived item on an organization project was restored from the
        archive. For more information, see "[Archiving items from your project](https://docs.github.com/issues/planning-and-tracking-with-projects/managing-items-in-your-project/archiving-items-from-your-project)."
  create:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        name: User-Agent
        in: header
        schema:
          type: string
      - example: 12312312
        name: X-Github-Hook-Id
        in: header
        schema:
          type: string
      - example: issues
        name: X-Github-Event
        in: header
        schema:
          type: string
      - example: 123123
        name: X-Github-Hook-Installation-Target-Id
        in: header
        schema:
          type: string
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        in: header
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        in: header
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#create
      summary: 'This event occurs when a Git branch or tag is created.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.


        **Notes**:

        - This event will not occur when more than three tags are created at once.

        - Payloads are capped at 25 MB. If an event generates a larger payload, GitHub
        will not deliver a payload for that webhook event. This may happen, for example,
        if many branches or tags are pushed at once. We suggest monitoring your payload
        size to ensure delivery.'
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-create'
        required: true
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        subcategory: create
  public:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        name: User-Agent
        schema:
          type: string
        in: header
      - example: 12312312
        name: X-Github-Hook-Id
        schema:
          type: string
        in: header
      - example: issues
        name: X-Github-Event
        schema:
          type: string
        in: header
      - example: 123123
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        schema:
          type: string
        in: header
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        schema:
          type: string
        in: header
      summary: 'This event occurs when repository visibility changes from private
        to public. For more information, see "[Setting repository visibility](https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/setting-repository-visibility)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#public
      operationId: public
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-public'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: public
  deployment-created:
    post:
      parameters:
      - name: User-Agent
        schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
      - name: X-Github-Hook-Id
        schema:
          type: string
        in: header
        example: 12312312
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#deployment
      summary: 'This event occurs when there is activity relating to deployments.
        For more information, see "[About deployments](https://docs.github.com/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#deployment)
        or "[Deployments](https://docs.github.com/rest/deployments/deployments)" in
        the REST API documentation.


        For activity relating to deployment status, use the `deployment_status` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Deployments" repository permission.'
      operationId: deployment/created
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-created'
      description: A deployment was created.
      x-github:
        githubCloudOnly: false
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: deployment
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  discussion-unanswered:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        name: User-Agent
        in: header
        schema:
          type: string
      - example: 12312312
        name: X-Github-Hook-Id
        in: header
        schema:
          type: string
      - example: issues
        name: X-Github-Event
        in: header
        schema:
          type: string
      - example: 123123
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        schema:
          type: string
        in: header
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        schema:
          type: string
        in: header
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      operationId: discussion/unanswered
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-unanswered'
        required: true
      description: A comment on the discussion was unmarked as the answer.
      x-github:
        subcategory: discussion
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  pull-request-assigned:
    post:
      parameters:
      - example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
        name: User-Agent
      - example: 12312312
        schema:
          type: string
        in: header
        name: X-Github-Hook-Id
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      operationId: pull-request/assigned
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-assigned'
      description: A pull request was assigned to a user.
      x-github:
        category: webhooks
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  project-reopened:
    post:
      parameters:
      - schema:
          type: string
        name: User-Agent
        in: header
        example: GitHub-Hookshot/123abc
      - schema:
          type: string
        name: X-Github-Hook-Id
        in: header
        example: 12312312
      - schema:
          type: string
        name: X-Github-Event
        in: header
        example: issues
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
        in: header
        example: 123123
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - schema:
          type: string
        name: X-GitHub-Delivery
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - schema:
          type: string
        name: X-Hub-Signature-256
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project
      summary: 'This event occurs when there is activity relating to a project (classic).
        For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a card or column on a project (classic), use the
        `project_card` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-reopened'
        required: true
      operationId: project/reopened
      description: A project (classic) was closed.
      x-github:
        category: webhooks
        subcategory: project
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  repository-privatized:
    post:
      parameters:
      - in: header
        schema:
          type: string
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - in: header
        schema:
          type: string
        name: X-Github-Hook-Id
        example: 12312312
      - in: header
        schema:
          type: string
        name: X-Github-Event
        example: issues
      - in: header
        schema:
          type: string
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        schema:
          type: string
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - in: header
        schema:
          type: string
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity relating to repositories.
        For more information, see "[About repositories](https://docs.github.com/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#repository)
        or "[Repositories](https://docs.github.com/rest/repos)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository
      operationId: repository/privatized
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-privatized'
        required: true
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
        githubCloudOnly: false
        category: webhooks
        subcategory: repository
      description: The visibility of a repository was changed to `private`.
  release-released:
    post:
      parameters:
      - in: header
        schema:
          type: string
        name: User-Agent
        example: GitHub-Hookshot/123abc
      - in: header
        schema:
          type: string
        name: X-Github-Hook-Id
        example: 12312312
      - in: header
        schema:
          type: string
        name: X-Github-Event
        example: issues
      - in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
        example: 123123
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        schema:
          type: string
        name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - in: header
        schema:
          type: string
        name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity relating to releases. For
        more information, see "[About releases](https://docs.github.com/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#release)
        or "[Releases](https://docs.github.com/rest/releases)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#release
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-released'
        required: true
      operationId: release/released
      description: A release was published, or a pre-release was changed to a release.
      x-github:
        category: webhooks
        subcategory: release
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
        - app
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  code-scanning-alert-created:
    post:
      parameters:
      - in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
        schema:
          type: string
      - in: header
        example: 12312312
        name: X-Github-Hook-Id
        schema:
          type: string
      - in: header
        example: issues
        schema:
          type: string
        name: X-Github-Event
      - in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        schema:
          type: string
      - in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        schema:
          type: string
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#code_scanning_alert
      summary: 'This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code scanning](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning alerts](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code scanning](https://docs.github.com/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Code scanning alerts" repository permission.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-created'
        required: true
      operationId: code-scanning-alert/created
      description: A code scanning alert was created in a repository.
      x-github:
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: code_scanning_alert
        category: webhooks
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  custom-property-deleted:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#custom_property
      summary: 'This event occurs when there is activity relating to a custom property.


        For more information, see "[Managing custom properties for repositories in
        your organization](https://docs.github.com/organizations/managing-organization-settings/managing-custom-properties-for-repositories-in-your-organization)".
        For information about the APIs to manage custom properties, see "[Custom properties](https://docs.github.com/rest/orgs/custom-properties)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Custom properties" organization permission.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-custom-property-deleted'
      operationId: custom-property/deleted
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        category: webhooks
        supported-webhook-types:
        - organization
        - app
        subcategory: custom_property
      description: A custom property was deleted.
  marketplace-purchase-pending-change-cancelled:
    post:
      parameters:
      - name: User-Agent
        in: header
        schema:
          type: string
        example: GitHub-Hookshot/123abc
      - name: X-Github-Hook-Id
        in: header
        schema:
          type: string
        example: 12312312
      - name: X-Github-Event
        in: header
        schema:
          type: string
        example: issues
      - name: X-Github-Hook-Installation-Target-Id
        in: header
        schema:
          type: string
        example: 123123
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        in: header
        schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - name: X-Hub-Signature-256
        in: header
        schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#marketplace_purchase
      summary: This event occurs when there is activity relating to a GitHub Marketplace
        purchase. For more information, see "[GitHub Marketplace](https://docs.github.com/marketplace)."
        For information about the APIs to manage GitHub Marketplace listings, see
        [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#marketplacelisting)
        or "[GitHub Marketplace](https://docs.github.com/rest/apps/marketplace)" in
        the REST API documentation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-marketplace-purchase-pending-change-cancelled'
      operationId: marketplace-purchase/pending-change-cancelled
      description: Someone cancelled a pending change to a GitHub Marketplace plan.
        Pending changes include plan cancellations and downgrades that will take effect
        at the end of a billing cycle.
      x-github:
        githubCloudOnly: false
        subcategory: marketplace_purchase
        category: webhooks
        supported-webhook-types:
        - marketplace
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  sponsorship-edited:
    post:
      parameters:
      - in: header
        schema:
          type: string
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - in: header
        schema:
          type: string
        example: 12312312
        name: X-Github-Hook-Id
      - in: header
        schema:
          type: string
        example: issues
        name: X-Github-Event
      - in: header
        schema:
          type: string
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - in: header
        schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to a sponsorship
        listing. For more information, see "[About GitHub Sponsors](https://docs.github.com/sponsors/getting-started-with-github-sponsors/about-github-sponsors)."
        For information about the API to manage sponsors, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#sponsorship).


        You can only create a sponsorship webhook on GitHub.com. For more information,
        see "[Configuring webhooks for events in your sponsored account](https://docs.github.com/sponsors/integrating-with-github-sponsors/configuring-webhooks-for-events-in-your-sponsored-account)."'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#sponsorship
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sponsorship-edited'
        required: true
      operationId: sponsorship/edited
      description: A monthly sponsor changed who can see their sponsorship. If you
        recognize your sponsors publicly, you may want to update your sponsor recognition
        to reflect the change when this event occurs.
      x-github:
        subcategory: sponsorship
        category: webhooks
        githubCloudOnly: false
        supported-webhook-types:
        - sponsors_listing
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  project-card-moved:
    post:
      parameters:
      - in: header
        example: GitHub-Hookshot/123abc
        schema:
          type: string
        name: User-Agent
      - in: header
        example: 12312312
        schema:
          type: string
        name: X-Github-Hook-Id
      - in: header
        example: issues
        schema:
          type: string
        name: X-Github-Event
      - in: header
        example: 123123
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        name: X-GitHub-Delivery
      - in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a project (classic) or a column on a project (classic),
        use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project_card
      operationId: project-card/moved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-moved'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        subcategory: project_card
        githubCloudOnly: false
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
      description: A card on a project (classic) was moved to another column or to
        another position in its column.
  security-advisory-withdrawn:
    post:
      parameters:
      - schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
      - schema:
          type: string
        example: 12312312
        in: header
        name: X-Github-Hook-Id
      - schema:
          type: string
        name: X-Github-Event
        in: header
        example: issues
      - schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
        in: header
        example: 123123
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - schema:
          type: string
        name: X-GitHub-Delivery
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
      - schema:
          type: string
        name: X-Hub-Signature-256
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
      summary: 'This event occurs when there is activity relating to a global security
        advisory that was reviewed by GitHub. A GitHub-reviewed global security advisory
        provides information about security vulnerabilities or malware that have been
        mapped to packages in ecosystems we support. For more information about global
        security advisories, see "[About global security advisories](https://docs.github.com/code-security/security-advisories/working-with-global-security-advisories-from-the-github-advisory-database/about-global-security-advisories)."
        For information about the API to manage security advisories, see [the REST
        API documentation](https://docs.github.com/rest/security-advisories/global-advisories)
        or [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#securityadvisory).


        GitHub Dependabot alerts are also powered by the security advisory dataset.
        For more information, see "[About Dependabot alerts](https://docs.github.com/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#security_advisory
      operationId: security-advisory/withdrawn
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-security-advisory-withdrawn'
      description: A previously published security advisory was withdrawn.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: security_advisory
        supported-webhook-types:
        - app
        category: webhooks
  projects-v2-item-converted:
    post:
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
        in: header
      - name: X-Github-Event
        schema:
          type: string
        example: project-v2-item
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2_item
      summary: 'This event occurs when there is activity relating to an item on an
        organization-level project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2item).


        For activity relating to a project (instead of an item on a project), use
        the `projects_v2` event. For activity relating to Projects (classic), use
        the `project`, `project_card`, and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      operationId: projects-v2-item/converted
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-item-converted'
      description: A draft issue in an organization project was converted to an issue.
      x-github:
        enabledForGitHubApps: true
        category: webhooks
        supported-webhook-types:
        - organization
        subcategory: projects_v2_item
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  discussion-closed:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: discussions
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        example: repository
        in: header
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-closed'
      operationId: discussion/closed
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: discussion
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
      description: A discussion was closed.
  discussion-reopened:
    post:
      parameters:
      - name: User-Agent
        schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
      - name: X-Github-Hook-Id
        schema:
          type: string
        example: 12312312
        in: header
      - name: X-Github-Event
        schema:
          type: string
        example: discussions
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        example: 123123
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
      - name: X-Hub-Signature-256
        schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      operationId: discussion/reopened
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-reopened'
      description: A discussion was reopened.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: discussion
        githubCloudOnly: false
  branch-protection-rule-edited:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
        in: header
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#branch_protection_rule
      summary: 'This event occurs when there is activity relating to branch protection
        rules. For more information, see "[About protected branches](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches)."
        For information about the APIs to manage branch protection rules, see [the
        GraphQL documentation](https://docs.github.com/graphql/reference/objects#branchprotectionrule)
        or "[Branch protection](https://docs.github.com/rest/branches/branch-protection)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Administration" repository permission.'
      operationId: branch-protection-rule/edited
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-branch-protection-rule-edited'
      description: A branch protection rule was edited.
      x-github:
        githubCloudOnly: false
        subcategory: branch_protection_rule
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  release-created:
    post:
      parameters:
      - name: User-Agent
        schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
      - name: X-Github-Hook-Id
        schema:
          type: string
        example: 12312312
        in: header
      - name: X-Github-Event
        example: issues
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
      summary: 'This event occurs when there is activity relating to releases. For
        more information, see "[About releases](https://docs.github.com/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#release)
        or "[Releases](https://docs.github.com/rest/releases)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#release
      operationId: release/created
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-created'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: release
        githubCloudOnly: false
      description: A draft was saved, or a release or pre-release was published without
        previously being saved as a draft.
  issues-unlabeled:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
        in: header
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-unlabeled'
      operationId: issues/unlabeled
      description: A label was removed from an issue.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
  secret-scanning-alert-reopened:
    post:
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
        in: header
      - name: X-Github-Event
        schema:
          type: string
        example: issues
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        example: 123123
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
      - name: X-Hub-Signature-256
        schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#secret_scanning_alert
      summary: 'This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret scanning](https://docs.github.com/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see "[Secret
        scanning](https://docs.github.com/rest/secret-scanning)" in the REST API documentation.


        For activity relating to secret scanning alert locations, use the `secret_scanning_alert_location`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Secret scanning alerts" repository permission.'
      operationId: secret-scanning-alert/reopened
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-reopened'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A previously closed secret scanning alert was reopened.
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: secret_scanning_alert
        githubCloudOnly: false
  discussion-unlabeled:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        example: repository
        in: header
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-unlabeled'
      operationId: discussion/unlabeled
      description: A label was removed from a discussion.
      x-github:
        githubCloudOnly: false
        subcategory: discussion
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  pull-request-review-dismissed:
    post:
      parameters:
      - name: User-Agent
        schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
      - name: X-Github-Hook-Id
        schema:
          type: string
        example: 12312312
        in: header
      - name: X-Github-Event
        schema:
          type: string
        example: issues
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        example: 123123
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
      - name: X-Hub-Signature-256
        schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
      summary: 'This event occurs when there is activity relating to a pull request
        review. A pull request review is a group of pull request review comments in
        addition to a body comment and a state. For more information, see "[About
        pull request reviews](https://docs.github.com/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)."
        For information about the APIs to manage pull request reviews, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#pullrequestreview)
        or "[Pull request reviews](https://docs.github.com/rest/pulls/reviews)" in
        the REST API documentation.


        For activity related to pull request review comments, pull request comments,
        or pull request review threads, use the `pull_request_review_comment`, `issue_comment`,
        or `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request_review
      operationId: pull-request-review/dismissed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-dismissed'
      description: A review on a pull request was dismissed.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: pull_request_review
        githubCloudOnly: false
  code-scanning-alert-reopened:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
        in: header
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to code scanning
        alerts in a repository. For more information, see "[About code scanning](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)"
        and "[About code scanning alerts](https://docs.github.com/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-alerts)."
        For information about the API to manage code scanning, see "[Code scanning](https://docs.github.com/rest/code-scanning)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Code scanning alerts" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#code_scanning_alert
      operationId: code-scanning-alert/reopened
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-code-scanning-alert-reopened'
      description: A previously fixed code scanning alert reappeared in a branch.
      x-github:
        githubCloudOnly: false
        subcategory: code_scanning_alert
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  repository-transferred:
    post:
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
        in: header
      - name: X-Github-Event
        example: issues
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
      summary: 'This event occurs when there is activity relating to repositories.
        For more information, see "[About repositories](https://docs.github.com/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#repository)
        or "[Repositories](https://docs.github.com/rest/repos)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository
      operationId: repository/transferred
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-transferred'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
        subcategory: repository
        githubCloudOnly: false
      description: Ownership of the repository was transferred to a user or organization
        account. This event is only sent to the account where the ownership is transferred.
        To receive the `repository.transferred` event, the new owner account must
        have the GitHub App installed, and the App must be subscribed to "Repository"
        events.
  workflow-job-queued:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
        in: header
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to a job in a GitHub
        Actions workflow. For more information, see "[Using jobs in a workflow](https://docs.github.com/actions/using-jobs/using-jobs-in-a-workflow)."
        For information about the API to manage workflow jobs, see "[Workflow jobs](https://docs.github.com/rest/actions/workflow-jobs)"
        in the REST API documentation.


        For activity relating to a workflow run instead of a job in a workflow run,
        use the `workflow_run` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Actions" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#workflow_job
      operationId: workflow-job/queued
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-job-queued'
      description: A job in a workflow run was created.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: workflow_job
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
        category: webhooks
  pull-request-ready-for-review:
    post:
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
        in: header
      - name: X-Github-Event
        schema:
          type: string
        example: issues
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/ready-for-review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-ready-for-review'
      description: A draft pull request was marked as ready for review. For more information,
        see "[Changing the stage of a pull request](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/changing-the-stage-of-a-pull-request)."
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: pull_request
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  secret-scanning-alert-created:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        example: repository
        in: header
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret scanning](https://docs.github.com/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see "[Secret
        scanning](https://docs.github.com/rest/secret-scanning)" in the REST API documentation.


        For activity relating to secret scanning alert locations, use the `secret_scanning_alert_location`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Secret scanning alerts" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#secret_scanning_alert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-created'
      operationId: secret-scanning-alert/created
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: secret_scanning_alert
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
      description: A secret scanning alert was created.
  discussion-pinned:
    post:
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
        in: header
      - name: X-Github-Event
        example: issues
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        example: 123123
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
      - name: X-Hub-Signature-256
        schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-pinned'
      operationId: discussion/pinned
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: discussion
        githubCloudOnly: false
      description: A discussion was pinned.
  issues-unlocked:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
        in: header
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issues
      summary: 'This event occurs when there is activity relating to an issue. For
        more information about issues, see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)."
        For information about the APIs to manage issues, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#issue)
        or "[Issues](https://docs.github.com/rest/issues)" in the REST API documentation.


        For activity relating to a comment on an issue, use the `issue_comment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issues-unlocked'
      operationId: issues/unlocked
      description: Conversation on an issue was locked. For more information, see
        "[Locking conversations](https://docs.github.com/communities/moderating-comments-and-conversations/locking-conversations)."
      x-github:
        githubCloudOnly: false
        subcategory: issues
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  dependabot-alert-auto-dismissed:
    post:
      parameters:
      - name: User-Agent
        schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
      - name: X-Github-Hook-Id
        schema:
          type: string
        example: 12312312
        in: header
      - name: X-Github-Event
        schema:
          type: string
        example: issues
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
      - name: X-Hub-Signature-256
        schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
      summary: 'This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot alerts](https://docs.github.com/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see "[Dependabot
        alerts](https://docs.github.com/rest/dependabot/alerts)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Dependabot alerts" repository permission.


        > [!NOTE]

        > Webhook events for Dependabot alerts are currently in public preview and
        subject to change.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#dependabot_alert
      operationId: dependabot-alert/auto-dismissed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-auto-dismissed'
      description: A Dependabot alert was automatically closed by a Dependabot auto-triage
        rule.
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: dependabot_alert
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  workflow-run-requested:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        example: repository
        in: header
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#workflow_run
      summary: 'This event occurs when there is activity relating to a run of a GitHub
        Actions workflow. For more information, see "[About workflows](https://docs.github.com/actions/using-workflows/about-workflows)."
        For information about the APIs to manage workflow runs, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#workflowrun)
        or "[Workflow runs](https://docs.github.com/rest/actions/workflow-runs)" in
        the REST API documentation.


        For activity relating to a job in a workflow run, use the `workflow_job` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Actions" repository permission.'
      operationId: workflow-run/requested
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-run-requested'
      description: A workflow run was triggered.
      x-github:
        githubCloudOnly: false
        subcategory: workflow_run
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
        category: webhooks
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  project-card-edited:
    post:
      parameters:
      - name: User-Agent
        schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
      - name: X-Github-Hook-Id
        schema:
          type: string
        example: 12312312
        in: header
      - name: X-Github-Event
        example: issues
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        example: 123123
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
      - name: X-Hub-Signature-256
        schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
      summary: 'This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a project (classic) or a column on a project (classic),
        use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project_card
      operationId: project-card/edited
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-edited'
      description: A note on a project (classic) was edited.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: project_card
        githubCloudOnly: false
  check-suite-rerequested:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        example: repository
        in: header
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to a check suite.
        For information about check suites, see "[Getting started with the Checks
        API](https://docs.github.com/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check suites, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#checksuite)
        or "[Check Suites](https://docs.github.com/rest/checks/suites)" in the REST
        API documentation.


        For activity relating to check runs, use the `check_run` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Checks" permission. To receive the `requested` and `rerequested`
        event types, the app must have at least write-level access for the "Checks"
        permission. GitHub Apps with write-level access for the "Checks" permission
        are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the `completed`
        event types in repositories.


        > [!NOTE]

        > The API only looks for pushes in the repository where the check suite was
        created. Pushes to a branch in a forked repository are not detected and return
        an empty `pull_requests` array and a `null` value for `head_branch`.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#check_suite
      operationId: check-suite/rerequested
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-suite-rerequested'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: check_suite
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
      description: Someone requested to re-run the check runs in a check suite. For
        more information, see [the GraphQL API documentation for creating a check
        suite](https://docs.github.com/graphql/reference/mutations#createchecksuite)
        or "[Create a check suite](https://docs.github.com/rest/checks/suites#create-a-check-suite)"
        in the REST API documentation.
  release-deleted:
    post:
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
        in: header
      - name: X-Github-Event
        schema:
          type: string
        example: issues
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
      summary: 'This event occurs when there is activity relating to releases. For
        more information, see "[About releases](https://docs.github.com/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#release)
        or "[Releases](https://docs.github.com/rest/releases)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#release
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-deleted'
      operationId: release/deleted
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: release
        githubCloudOnly: false
      description: A release, pre-release, or draft release was deleted.
  release-published:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        example: repository
        in: header
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to releases. For
        more information, see "[About releases](https://docs.github.com/repositories/releasing-projects-on-github/about-releases)."
        For information about the APIs to manage releases, see [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#release)
        or "[Releases](https://docs.github.com/rest/releases)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#release
      operationId: release/published
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-release-published'
      description: A release, pre-release, or draft of a release was published.
      x-github:
        githubCloudOnly: false
        subcategory: release
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  workflow-run-completed:
    post:
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
        in: header
      - name: X-Github-Event
        schema:
          type: string
        example: issues
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
      summary: 'This event occurs when there is activity relating to a run of a GitHub
        Actions workflow. For more information, see "[About workflows](https://docs.github.com/actions/using-workflows/about-workflows)."
        For information about the APIs to manage workflow runs, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#workflowrun)
        or "[Workflow runs](https://docs.github.com/rest/actions/workflow-runs)" in
        the REST API documentation.


        For activity relating to a job in a workflow run, use the `workflow_job` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Actions" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#workflow_run
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-workflow-run-completed'
      operationId: workflow-run/completed
      description: A workflow run finished. This event occurs when a workflow run
        is completed, regardless of whether the workflow was successful or unsuccessful.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
        subcategory: workflow_run
        githubCloudOnly: false
  sub-issues-parent-issue-removed:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        example: repository
        in: header
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to sub-issues.


        For activity relating to issues more generally, use the `issues` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permissions.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#sub-issues
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-sub-issues-parent-issue-removed'
      operationId: sub-issues/parent-issue-removed
      description: A parent issue was removed from an issue.
      x-github:
        githubCloudOnly: false
        subcategory: sub-issues
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  project-card-converted:
    post:
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
        in: header
      - name: X-Github-Event
        example: issues
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
      summary: 'This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a project (classic) or a column on a project (classic),
        use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project_card
      operationId: project-card/converted
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-converted'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: project_card
        githubCloudOnly: false
      description: A note in a project (classic) was converted to an issue.
  deployment-status-created:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
        in: header
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to deployment statuses.
        For more information, see "[About deployments](https://docs.github.com/actions/deployment/about-deployments)."
        For information about the APIs to manage deployments, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#deployment)
        or "[Deployments](https://docs.github.com/rest/deployments/deployments)" in
        the REST API documentation.


        For activity relating to deployment creation, use the `deployment` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Deployments" repository permission.


        > [!NOTE]

        > A webhook event is not fired for deployment statuses with an `inactive`
        state.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#deployment_status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-deployment-status-created'
      operationId: deployment-status/created
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: deployment_status
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
      description: A new deployment status was created.
  pull-request-closed:
    post:
      parameters:
      - name: User-Agent
        schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
      - name: X-Github-Hook-Id
        schema:
          type: string
        example: 12312312
        in: header
      - name: X-Github-Event
        schema:
          type: string
        example: issues
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        example: 123123
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
      - name: X-Hub-Signature-256
        schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/closed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-closed'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        supported-webhook-types:
        - repository
        - organization
        - app
        subcategory: pull_request
        githubCloudOnly: false
      description: A pull request was closed. If `merged` is false in the webhook
        payload, the pull request was closed with unmerged commits. If `merged` is
        true in the webhook payload, the pull request was merged.
  pull-request-milestoned:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
        example: repository
        in: header
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      operationId: pull-request/milestoned
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-milestoned'
      description: A pull request was added to a milestone.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: pull_request
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
  installation-new-permissions-accepted:
    post:
      parameters:
      - name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
        in: header
      - name: X-Github-Event
        schema:
          type: string
        example: issues
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        example: 123123
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
      - name: X-Hub-Signature-256
        schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#installation
      summary: 'This event occurs when there is activity relating to a GitHub App
        installation. All GitHub Apps receive this event by default. You cannot manually
        subscribe to this event.


        For more information about GitHub Apps, see "[About apps](https://docs.github.com/developers/apps/getting-started-with-apps/about-apps#about-github-apps)."
        For information about the APIs to manage GitHub Apps, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#app) or "[Apps](https://docs.github.com/rest/apps)"
        in the REST API documentation.'
      operationId: installation/new-permissions-accepted
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-installation-new-permissions-accepted'
      description: Someone granted new permissions to a GitHub App.
      x-github:
        category: webhooks
        supported-webhook-types:
        - app
        subcategory: installation
        githubCloudOnly: false
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  personal-access-token-request-approved:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: personal_access_token_request
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
        example: 123123
        in: header
      - schema:
          type: string
        in: header
        example: integration
        name: X-Github-Hook-Installation-Target-Type
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#personal_access_token_request
      summary: 'This event occurs when there is activity relating to a request for
        a fine-grained personal access token to access resources that belong to a
        resource owner that requires approval for token access. For more information,
        see "[Creating a personal access token](https://docs.github.com/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Personal access token requests" organization permission.


        > [!NOTE]

        > Fine-grained PATs are in public preview. Related APIs, events, and functionality
        are subject to change.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-personal-access-token-request-approved'
      operationId: personal-access-token-request/approved
      description: A fine-grained personal access token request was approved.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        githubCloudOnly: false
        subcategory: personal_access_token_request
        supported-webhook-types:
        - app
        category: webhooks
  repository-archived:
    post:
      parameters:
      - name: User-Agent
        schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
      - name: X-Github-Hook-Id
        schema:
          type: string
        example: 12312312
        in: header
      - name: X-Github-Event
        example: issues
        schema:
          type: string
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository
      summary: 'This event occurs when there is activity relating to repositories.
        For more information, see "[About repositories](https://docs.github.com/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#repository)
        or "[Repositories](https://docs.github.com/rest/repos)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-archived'
      operationId: repository/archived
      description: A repository was archived.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
        subcategory: repository
        githubCloudOnly: false
  project-card-deleted:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
        in: header
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to a card on a project
        (classic). For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a project (classic) or a column on a project (classic),
        use the `project` and `project_column` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project_card
      operationId: project-card/deleted
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-card-deleted'
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A card on a project (classic) was deleted.
      x-github:
        githubCloudOnly: false
        subcategory: project_card
        supported-webhook-types:
        - repository
        - organization
        - app
        category: webhooks
  custom-property-updated:
    post:
      parameters:
      - name: User-Agent
        schema:
          type: string
        example: GitHub-Hookshot/123abc
        in: header
      - name: X-Github-Hook-Id
        schema:
          type: string
        example: 12312312
        in: header
      - name: X-Github-Event
        schema:
          type: string
        example: issues
        in: header
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        schema:
          type: string
        in: header
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
      summary: 'This event occurs when there is activity relating to a custom property.


        For more information, see "[Managing custom properties for repositories in
        your organization](https://docs.github.com/organizations/managing-organization-settings/managing-custom-properties-for-repositories-in-your-organization)".
        For information about the APIs to manage custom properties, see "[Custom properties](https://docs.github.com/rest/orgs/custom-properties)"
        in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Custom properties" organization permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#custom_property
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-custom-property-updated'
      operationId: custom-property/updated
      description: A custom property was updated.
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        category: webhooks
        supported-webhook-types:
        - organization
        - app
        subcategory: custom_property
        githubCloudOnly: false
  pull-request-review-requested:
    post:
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - name: X-Github-Hook-Installation-Target-Type
        example: repository
        schema:
          type: string
        in: header
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-requested'
      operationId: pull-request/review-requested
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: Review by a person or team was requested for a pull request. For
        more information, see "[Requesting a pull request review](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/requesting-a-pull-request-review)."
      x-github:
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: pull_request
        category: webhooks
  repository-advisory-published:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_advisory
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - in: header
        example: issues
        schema:
          type: string
        name: X-Github-Event
      - example: 123123
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
        name: X-Hub-Signature-256
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      operationId: repository-advisory/published
      x-github:
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: repository_advisory
        category: webhooks
      description: A repository security advisory was published.
      summary: 'This event occurs when there is activity relating to a repository
        security advisory. For more information about repository security advisories,
        see "[About GitHub Security Advisories for repositories](https://docs.github.com/code-security/repository-security-advisories/about-github-security-advisories-for-repositories)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Repository security advisories" permission.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-advisory-published'
  project-column-moved:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#project_column
      summary: 'This event occurs when there is activity relating to a column on a
        project (classic). For more information, see "[About projects (classic)](https://docs.github.com/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards)."
        For information about the API to manage classic projects, see [the GraphQL
        API documentation](https://docs.github.com/graphql/reference/objects#project)
        or "[Projects (classic)](https://docs.github.com/rest/projects)" in the REST
        API documentation.


        For activity relating to a project (classic) or a card on a project (classic),
        use the `project` and `project_card` event.


        This event relates to projects (classic) only. For activity relating to the
        new Projects experience, use the `projects_v2` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" repository or organization permission.'
      x-github:
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: project_column
        category: webhooks
      operationId: project-column/moved
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A column was moved to a new position on a project (classic).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-project-column-moved'
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - schema:
          type: string
        example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - schema:
          type: string
        example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
      - schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
  pull-request-review-comment-deleted:
    post:
      summary: 'This event occurs when there is activity relating to a pull request
        review comment. A pull request review comment is a comment on a pull request''s
        diff. For more information, see "[Commenting on a pull request](https://docs.github.com/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)."
        For information about the APIs to manage pull request review comments, see
        [the GraphQL API documentation](https://docs.github.com/graphql/reference/objects#pullrequestreviewcomment)
        or "[Pull request review comments](https://docs.github.com/rest/pulls/comments)"
        in the REST API documentation.


        For activity related to pull request reviews, pull request comments, or pull
        request review threads, use the `pull_request_review`, `issue_comment`, or
        `pull_request_review_thread` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request_review_comment
      operationId: pull-request-review-comment/deleted
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: pull_request_review_comment
        category: webhooks
      description: A comment on a pull request diff was deleted.
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        name: User-Agent
        schema:
          type: string
      - example: 12312312
        in: header
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
        name: X-Hub-Signature-256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-review-comment-deleted'
  pull-request-locked:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: pull_request
        category: webhooks
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      operationId: pull-request/locked
      description: Conversation on a pull request was locked. For more information,
        see "[Locking conversations](https://docs.github.com/communities/moderating-comments-and-conversations/locking-conversations)."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-locked'
      parameters:
      - schema:
          type: string
        in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - schema:
          type: string
        in: header
        example: 12312312
        name: X-Github-Hook-Id
      - example: issues
        in: header
        schema:
          type: string
        name: X-Github-Event
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
  dependabot-alert-created:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#dependabot_alert
      parameters:
      - in: header
        example: GitHub-Hookshot/123abc
        schema:
          type: string
        name: User-Agent
      - in: header
        example: 12312312
        schema:
          type: string
        name: X-Github-Hook-Id
      - schema:
          type: string
        in: header
        example: issues
        name: X-Github-Event
      - example: 123123
        name: X-Github-Hook-Installation-Target-Id
        in: header
        schema:
          type: string
      - example: repository
        name: X-Github-Hook-Installation-Target-Type
        in: header
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        in: header
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        in: header
        schema:
          type: string
      operationId: dependabot-alert/created
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: dependabot_alert
        category: webhooks
      description: A manifest file change introduced a vulnerable dependency, or a
        GitHub Security Advisory was published and an existing dependency was found
        to be vulnerable.
      summary: 'This event occurs when there is activity relating to Dependabot alerts.


        For more information about Dependabot alerts, see "[About Dependabot alerts](https://docs.github.com/code-security/dependabot/dependabot-alerts/about-dependabot-alerts)."
        For information about the API to manage Dependabot alerts, see "[Dependabot
        alerts](https://docs.github.com/rest/dependabot/alerts)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Dependabot alerts" repository permission.


        > [!NOTE]

        > Webhook events for Dependabot alerts are currently in public preview and
        subject to change.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-dependabot-alert-created'
  issue-comment-created:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#issue_comment
      summary: 'This event occurs when there is activity relating to a comment on
        an issue or pull request. For more information about issues and pull requests,
        see "[About issues](https://docs.github.com/issues/tracking-your-work-with-issues/about-issues)"
        and "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage issue comments, see [the GraphQL
        documentation](https://docs.github.com/graphql/reference/objects#issuecomment)
        or "[Issue comments](https://docs.github.com/rest/issues/comments)" in the
        REST API documentation.


        For activity relating to an issue as opposed to comments on an issue, use
        the `issue` event. For activity related to pull request reviews or pull request
        review comments, use the `pull_request_review` or `pull_request_review_comment`
        events. For more information about the different types of pull request comments,
        see "[Working with comments](https://docs.github.com/rest/guides/working-with-comments)."


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" repository permission.'
      operationId: issue-comment/created
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      x-github:
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: issue_comment
        category: webhooks
      description: A comment on an issue or pull request was created.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-issue-comment-created'
      parameters:
      - in: header
        schema:
          type: string
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - in: header
        schema:
          type: string
        example: 12312312
        name: X-Github-Hook-Id
      - example: issues
        in: header
        name: X-Github-Event
        schema:
          type: string
      - in: header
        schema:
          type: string
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - in: header
        schema:
          type: string
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        schema:
          type: string
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - in: header
        schema:
          type: string
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
  check-suite-completed:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#check_suite
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-check-suite-completed'
      operationId: check-suite/completed
      x-github:
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: check_suite
        category: webhooks
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: All check runs in a check suite have completed, and a conclusion
        is available.
      parameters:
      - in: header
        schema:
          type: string
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - in: header
        schema:
          type: string
        example: 12312312
        name: X-Github-Hook-Id
      - in: header
        schema:
          type: string
        example: issues
        name: X-Github-Event
      - in: header
        schema:
          type: string
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - in: header
        schema:
          type: string
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        schema:
          type: string
      - in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        schema:
          type: string
      summary: 'This event occurs when there is activity relating to a check suite.
        For information about check suites, see "[Getting started with the Checks
        API](https://docs.github.com/rest/guides/getting-started-with-the-checks-api)."
        For information about the APIs to manage check suites, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#checksuite)
        or "[Check Suites](https://docs.github.com/rest/checks/suites)" in the REST
        API documentation.


        For activity relating to check runs, use the `check_run` event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Checks" permission. To receive the `requested` and `rerequested`
        event types, the app must have at least write-level access for the "Checks"
        permission. GitHub Apps with write-level access for the "Checks" permission
        are automatically subscribed to this webhook event.


        Repository and organization webhooks only receive payloads for the `completed`
        event types in repositories.


        > [!NOTE]

        > The API only looks for pushes in the repository where the check suite was
        created. Pushes to a branch in a forked repository are not detected and return
        an empty `pull_requests` array and a `null` value for `head_branch`.'
  secret-scanning-alert-publicly-leaked:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-secret-scanning-alert-publicly-leaked'
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#secret_scanning_alert
      operationId: secret-scanning-alert/publicly-leaked
      x-github:
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: secret_scanning_alert
        category: webhooks
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
      description: A secret scanning alert was detected in a public repo.
      summary: 'This event occurs when there is activity relating to a secret scanning
        alert. For more information about secret scanning, see "[About secret scanning](https://docs.github.com/code-security/secret-scanning/about-secret-scanning)."
        For information about the API to manage secret scanning alerts, see "[Secret
        scanning](https://docs.github.com/rest/secret-scanning)" in the REST API documentation.


        For activity relating to secret scanning alert locations, use the `secret_scanning_alert_location`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Secret scanning alerts" repository permission.'
      parameters:
      - example: GitHub-Hookshot/123abc
        in: header
        schema:
          type: string
        name: User-Agent
      - example: 12312312
        in: header
        schema:
          type: string
        name: X-Github-Hook-Id
      - in: header
        schema:
          type: string
        example: issues
        name: X-Github-Event
      - schema:
          type: string
        in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
      - schema:
          type: string
        in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
      - schema:
          type: string
        in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
      - schema:
          type: string
        in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
  repository-import:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository_import
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-import'
      parameters:
      - in: header
        example: GitHub-Hookshot/123abc
        schema:
          type: string
        name: User-Agent
      - in: header
        example: 12312312
        schema:
          type: string
        name: X-Github-Hook-Id
      - in: header
        example: issues
        schema:
          type: string
        name: X-Github-Event
      - in: header
        example: 123123
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
      - in: header
        example: repository
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        name: X-GitHub-Delivery
      - in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        name: X-Hub-Signature-256
      x-github:
        supported-webhook-types:
        - repository
        - organization
        githubCloudOnly: false
        subcategory: repository_import
        category: webhooks
      summary: This event occurs when a repository is imported to GitHub. For more
        information, see "[Importing a repository with GitHub Importer](https://docs.github.com/get-started/importing-your-projects-to-github/importing-source-code-to-github/importing-a-repository-with-github-importer)."
        For more information about the API to manage imports, see [the REST API documentation](https://docs.github.com/rest/migrations/source-imports).
      operationId: repository-import
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  milestone-edited:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#milestone
      description: A milestone was edited.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-edited'
      summary: 'This event occurs when there is activity relating to milestones. For
        more information, see "[About milestones](https://docs.github.com/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#milestone)
        or "[Milestones](https://docs.github.com/rest/issues/milestones)" in the REST
        API documentation.


        If you want to receive an event when an issue or pull request is added to
        or removed from a milestone, use the `milestoned` or `demilestoned` action
        type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" or "Pull requests" repository permissions.'
      x-github:
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: milestone
        category: webhooks
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - in: header
        example: 123123
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
      - in: header
        example: repository
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        name: X-GitHub-Delivery
      - in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        name: X-Hub-Signature-256
      operationId: milestone/edited
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  milestone-created:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#milestone
      description: A milestone was created.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-milestone-created'
      summary: 'This event occurs when there is activity relating to milestones. For
        more information, see "[About milestones](https://docs.github.com/issues/using-labels-and-milestones-to-track-work/about-milestones)."
        For information about the APIs to manage milestones, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#milestone)
        or "[Milestones](https://docs.github.com/rest/issues/milestones)" in the REST
        API documentation.


        If you want to receive an event when an issue or pull request is added to
        or removed from a milestone, use the `milestoned` or `demilestoned` action
        type for the `issues` or `pull_request` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Issues" or "Pull requests" repository permissions.'
      x-github:
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: milestone
        category: webhooks
      parameters:
      - in: header
        example: GitHub-Hookshot/123abc
        schema:
          type: string
        name: User-Agent
      - in: header
        example: 12312312
        schema:
          type: string
        name: X-Github-Hook-Id
      - example: issues
        in: header
        schema:
          type: string
        name: X-Github-Event
      - example: 123123
        name: X-Github-Hook-Installation-Target-Id
        in: header
        schema:
          type: string
      - example: repository
        name: X-Github-Hook-Installation-Target-Type
        in: header
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        in: header
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        in: header
        schema:
          type: string
      operationId: milestone/created
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  discussion-labeled:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#discussion
      description: A label was added to a discussion.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-discussion-labeled'
      summary: 'This event occurs when there is activity relating to a discussion.
        For more information about discussions, see "[GitHub Discussions](https://docs.github.com/discussions)."
        For information about the API to manage discussions, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#discussion).


        For activity relating to a comment on a discussion, use the `discussion_comment`
        event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Discussions" repository permission.


        > [!NOTE]

        > Webhook events for GitHub Discussions are currently in public preview and
        subject to change.'
      parameters:
      - in: header
        example: GitHub-Hookshot/123abc
        name: User-Agent
        schema:
          type: string
      - in: header
        example: 12312312
        name: X-Github-Hook-Id
        schema:
          type: string
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        schema:
          type: string
      - in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        schema:
          type: string
      x-github:
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: discussion
        category: webhooks
      operationId: discussion/labeled
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  projects-v2-deleted:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#projects_v2
      description: A project in the organization was deleted.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-projects-v2-project-deleted'
      parameters:
      - example: GitHub-Hookshot/123abc
        name: User-Agent
        in: header
        schema:
          type: string
      - example: 12312312
        name: X-Github-Hook-Id
        in: header
        schema:
          type: string
      - in: header
        example: project-v2
        schema:
          type: string
        name: X-Github-Event
      - example: 123123
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        in: header
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is activity relating to an organization-level
        project. For more information, see "[About Projects](https://docs.github.com/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)."
        For information about the Projects API, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#projectv2).


        For activity relating to a item on a project, use the `projects_v2_item` event.
        For activity relating to Projects (classic), use the `project`, `project_card`,
        and `project_column` events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Projects" organization permission.


        > [!NOTE]

        > Webhook events for projects are currently in public preview and subject
        to change. To share feedback about projects webhooks with GitHub, see the
        [Projects webhook feedback discussion](https://github.com/orgs/community/discussions/17405).'
      x-github:
        subcategory: projects_v2
        supported-webhook-types:
        - organization
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: webhooks
      operationId: projects-v2/deleted
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  pull-request-synchronize:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#pull_request
      description: A pull request's head branch was updated. For example, the head
        branch was updated from the base branch or new commits were pushed to the
        head branch.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-pull-request-synchronize'
      parameters:
      - in: header
        schema:
          type: string
        example: GitHub-Hookshot/123abc
        name: User-Agent
      - in: header
        schema:
          type: string
        example: 12312312
        name: X-Github-Hook-Id
      - in: header
        example: issues
        name: X-Github-Event
        schema:
          type: string
      - in: header
        example: 123123
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - in: header
        example: repository
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        name: X-GitHub-Delivery
        schema:
          type: string
      - in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        name: X-Hub-Signature-256
        schema:
          type: string
      summary: 'This event occurs when there is activity on a pull request. For more
        information, see "[About pull requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests)."
        For information about the APIs to manage pull requests, see [the GraphQL API
        documentation](https://docs.github.com/graphql/reference/objects#pullrequest)
        or "[Pulls](https://docs.github.com/rest/pulls/pulls)" in the REST API documentation.


        For activity related to pull request reviews, pull request review comments,
        pull request comments, or pull request review threads, use the `pull_request_review`,
        `pull_request_review_comment`, `issue_comment`, or `pull_request_review_thread`
        events instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Pull requests" repository permission.'
      x-github:
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: pull_request
        category: webhooks
      operationId: pull-request/synchronize
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  push:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#push
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-push'
      parameters:
      - in: header
        example: GitHub-Hookshot/123abc
        schema:
          type: string
        name: User-Agent
      - in: header
        example: 12312312
        schema:
          type: string
        name: X-Github-Hook-Id
      - in: header
        example: issues
        schema:
          type: string
        name: X-Github-Event
      - in: header
        example: 123123
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Id
      - in: header
        example: repository
        schema:
          type: string
        name: X-Github-Hook-Installation-Target-Type
      - in: header
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        name: X-GitHub-Delivery
      - in: header
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        name: X-Hub-Signature-256
      summary: 'This event occurs when there is a push to a repository branch. This
        includes when a commit is pushed, when a commit tag is pushed,

        when a branch is deleted, when a tag is deleted, or when a repository is created
        from a template. To subscribe to only branch

        and tag deletions, use the [`delete`](#delete) webhook event.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Contents" repository permission.


        > [!NOTE]

        > Events will not be created if more than 5000 branches are pushed at once.
        Events will not be created for tags when more than three tags are pushed at
        once.'
      x-github:
        supported-webhook-types:
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: push
        category: webhooks
      operationId: push
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  repository-created:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#repository
      description: A repository was created.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-repository-created'
      summary: 'This event occurs when there is activity relating to repositories.
        For more information, see "[About repositories](https://docs.github.com/repositories/creating-and-managing-repositories/about-repositories)."
        For information about the APIs to manage repositories, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#repository)
        or "[Repositories](https://docs.github.com/rest/repos)" in the REST API documentation.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Metadata" repository permission.'
      x-github:
        supported-webhook-types:
        - business
        - repository
        - organization
        - app
        githubCloudOnly: false
        subcategory: repository
        category: webhooks
      parameters:
      - in: header
        example: GitHub-Hookshot/123abc
        schema:
          type: string
        name: User-Agent
      - in: header
        example: 12312312
        schema:
          type: string
        name: X-Github-Hook-Id
      - example: issues
        schema:
          type: string
        in: header
        name: X-Github-Event
      - name: X-Github-Hook-Installation-Target-Id
        example: 123123
        in: header
        schema:
          type: string
      - name: X-Github-Hook-Installation-Target-Type
        example: repository
        in: header
        schema:
          type: string
      - name: X-GitHub-Delivery
        example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        schema:
          type: string
      - name: X-Hub-Signature-256
        example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        schema:
          type: string
      operationId: repository/created
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  marketplace-purchase-cancelled:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#marketplace_purchase
      description: Someone cancelled a GitHub Marketplace plan, and the last billing
        cycle has ended. The change will take effect on the account immediately.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-marketplace-purchase-cancelled'
      summary: This event occurs when there is activity relating to a GitHub Marketplace
        purchase. For more information, see "[GitHub Marketplace](https://docs.github.com/marketplace)."
        For information about the APIs to manage GitHub Marketplace listings, see
        [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#marketplacelisting)
        or "[GitHub Marketplace](https://docs.github.com/rest/apps/marketplace)" in
        the REST API documentation.
      x-github:
        supported-webhook-types:
        - marketplace
        githubCloudOnly: false
        subcategory: marketplace_purchase
        category: webhooks
      parameters:
      - in: header
        name: User-Agent
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - in: header
        name: X-Github-Hook-Id
        example: 12312312
        schema:
          type: string
      - name: X-Github-Event
        in: header
        example: issues
        schema:
          type: string
      - example: 123123
        in: header
        name: X-Github-Hook-Installation-Target-Id
        schema:
          type: string
      - example: repository
        in: header
        name: X-Github-Hook-Installation-Target-Type
        schema:
          type: string
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        in: header
        name: X-GitHub-Delivery
        schema:
          type: string
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        in: header
        name: X-Hub-Signature-256
        schema:
          type: string
      operationId: marketplace-purchase/cancelled
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
  organization-member-removed:
    post:
      externalDocs:
        url: https://docs.github.com/webhooks/webhook-events-and-payloads#organization
      description: A member was removed from the organization.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook-organization-member-removed'
      parameters:
      - name: User-Agent
        in: header
        example: GitHub-Hookshot/123abc
        schema:
          type: string
      - name: X-Github-Hook-Id
        in: header
        example: 12312312
        schema:
          type: string
      - in: header
        example: issues
        schema:
          type: string
        name: X-Github-Event
      - example: 123123
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Id
      - example: repository
        schema:
          type: string
        in: header
        name: X-Github-Hook-Installation-Target-Type
      - example: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        schema:
          type: string
        in: header
        name: X-GitHub-Delivery
      - example: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
        schema:
          type: string
        in: header
        name: X-Hub-Signature-256
      x-github:
        supported-webhook-types:
        - organization
        - business
        - app
        githubCloudOnly: false
        subcategory: organization
        category: webhooks
      summary: 'This event occurs when there is activity relating to an organization
        and its members. For more information, see "[About organizations](https://docs.github.com/organizations/collaborating-with-groups-in-organizations/about-organizations)."
        For information about the APIs to manage organizations, see [the GraphQL documentation](https://docs.github.com/graphql/reference/objects#organization)
        or "[Organizations](https://docs.github.com/rest/orgs)" in the REST API documentation.


        If you want to receive an event when a non-member is blocked or unblocked
        from an organization, use the `org_block` event instead.


        To subscribe to this event, a GitHub App must have at least read-level access
        for the "Members" organization permission.'
      operationId: organization/member-removed
      responses:
        200:
          description: Return a 200 status to indicate that the data was received
            successfully
components:
  schemas:
    nullable-simple-user:
      type:
      - object
      - 'null'
      title: Simple User
      description: A GitHub user.
      properties:
        name:
          type:
          - string
          - 'null'
        email:
          type:
          - string
          - 'null'
        login:
          type: string
          examples:
          - octocat
        id:
          type: integer
          format: int64
          examples:
          - 1
        node_id:
          type: string
          examples:
          - MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          examples:
          - https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type:
          - string
          - 'null'
          examples:
          - 41d064eb2195891e12d0413f63227ea7
        url:
          type: string
          format: uri
          examples:
          - https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          examples:
          - https://github.com/octocat
        followers_url:
          type: string
          format: uri
          examples:
          - https://api.github.com/users/octocat/followers
        following_url:
          type: string
          examples:
          - https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          examples:
          - https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          examples:
          - https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          examples:
          - https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          examples:
          - https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          examples:
          - https://api.github.com/users/octocat/repos
        events_url:
          type: string
          examples:
          - https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          examples:
          - https://api.github.com/users/octocat/received_events
        type:
          type: string
          examples:
          - User
        site_admin:
          type: boolean
        starred_at:
          type: string
          examples:
          - '"2020-07-09T00:17:55Z"'
        user_view_type:
          type: string
          examples:
          - public
      required:
      - login
      - id
      - node_id
      - avatar_url
      - gravatar_id
      - url
      - html_url
      - followers_url
      - following_url
      - gists_url
      - starred_url
      - subscriptions_url
      - organizations_url
      - repos_url
      - events_url
      - received_events_url
      - type
      - site_admin
      minProperties: 18
    validation-error:
      type: object
      title: Validation Error
      description: Validation Error
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              resource:
                type: string
              field:
                type: string
              message:
                type: string
              code:
                type: string
              index:
                type: integer
              value:
                oneOf:
                - type:
                  - string
                  - 'null'
                - type:
                  - integer
                  - 'null'
                - type:
                  - array
                  - 'null'
                  items:
                    type: string
                  minItems: 0
                  uniqueItems: false
                type: 'null'
            required:
            - code
            minProperties: 1
          minItems: 0
          uniqueItems: false
      required:
      - message
      - documentation_url
      minProperties: 2
    nullable-license-simple:
      type:
      - object
      - 'null'
      title: License Simple
      description: License Simple
      properties:
        key:
          type: string
          examples:
          - mit
        name:
          type: string
          examples:
          - MIT License
        url:
          type:
          - string
          - 'null'
          format: uri
          examples:
          - https://api.github.com/licenses/mit
        spdx_id:
          type:
          - string
          - 'null'
          examples:
          - MIT
        node_id:
          type: string
          examples:
          - MDc6TGljZW5zZW1pdA==
        html_url:
          type: string
          format: uri
      required:
      - key
      - name
      - url
      - spdx_id
      - node_id
      minProperties: 5
    search-result-text-matches:
      type: array
      title: Search Result Text Matches
      items:
        type: object
        properties:
          object_url:
            type: string
          object_type:
            type:
            - string
            - 'null'
          property:
            type: string
          fragment:
            type: string
          matches:
            type: array
            items:
              type: object
              properties:
                text:
                  type: string
                indices:
                  type: array
                  items:
                    type: integer
                  minItems: 0
                  uniqueItems: false
              minProperties: 0
            minItems: 0
            uniqueItems: false
        minProperties: 0
      minItems: 0
      uniqueItems: false
    repo-search-result-item:
      type: object
      title: Repo Search Result Item
      description: Repo Search Result Item
      properties:
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        full_name:
          type: string
        owner:
          $ref: '#/components/schemas/nullable-simple-user'
        private:
          type: boolean
        html_url:
          type: string
          format: uri
        description:
          type:
          - string
          - 'null'
        fork:
          type: boolean
        url:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        pushed_at:
          type: string
          format: date-time
        homepage:
          type:
          - string
          - 'null'
          format: uri
        size:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        language:
          type:
          - string
          - 'null'
        forks_count:
          type: integer
        open_issues_count:
          type: integer
        master_branch:
          type: string
        default_branch:
          type: string
        score:
          type: number
        forks_url:
          type: string
          format: uri
        keys_url:
          type: string
        collaborators_url:
          type: string
        teams_url:
          type: string
          format: uri
        hooks_url:
          type: string
          format: uri
        issue_events_url:
          type: string
        events_url:
          type: string
          format: uri
        assignees_url:
          type: string
        branches_url:
          type: string
        tags_url:
          type: string
          format: uri
        blobs_url:
          type: string
        git_tags_url:
          type: string
        git_refs_url:
          type: string
        trees_url:
          type: string
        statuses_url:
          type: string
        languages_url:
          type: string
          format: uri
        stargazers_url:
          type: string
          format: uri
        contributors_url:
          type: string
          format: uri
        subscribers_url:
          type: string
          format: uri
        subscription_url:
          type: string
          format: uri
        commits_url:
          type: string
        git_commits_url:
          type: string
        comments_url:
          type: string
        issue_comment_url:
          type: string
        contents_url:
          type: string
        compare_url:
          type: string
        merges_url:
          type: string
          format: uri
        archive_url:
          type: string
        downloads_url:
          type: string
          format: uri
        issues_url:
          type: string
        pulls_url:
          type: string
        milestones_url:
          type: string
        notifications_url:
          type: string
        labels_url:
          type: string
        releases_url:
          type: string
        deployments_url:
          type: string
          format: uri
        git_url:
          type: string
        ssh_url:
          type: string
        clone_url:
          type: string
        svn_url:
          type: string
          format: uri
        forks:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        topics:
          type: array
          items:
            type: string
          minItems: 0
          uniqueItems: false
        mirror_url:
          type:
          - string
          - 'null'
          format: uri
        has_issues:
          type: boolean
        has_projects:
          type: boolean
        has_pages:
          type: boolean
        has_wiki:
          type: boolean
        has_downloads:
          type: boolean
        has_discussions:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          type: string
          description: 'The repository visibility: public, private, or internal.'
        license:
          $ref: '#/components/schemas/nullable-license-simple'
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
          required:
          - admin
          - push
          - pull
          minProperties: 3
        text_matches:
          $ref: '#/components/schemas/search-result-text-matches'
        temp_clone_token:
          type: string
        allow_merge_commit:
          type: boolean
        allow_squash_merge:
          type: boolean
        allow_rebase_merge:
          type: boolean
        allow_auto_merge:
          type: boolean
        delete_branch_on_merge:
          type: boolean
        allow_forking:
          type: boolean
        is_template:
          type: boolean
        web_commit_signoff_required:
          type: boolean
          examples:
          - false
      required:
      - id
      - node_id
      - name
      - full_name
      - owner
      - private
      - html_url
      - description
      - fork
      - url
      - created_at
      - updated_at
      - pushed_at
      - homepage
      - size
      - stargazers_count
      - watchers_count
      - language
      - forks_count
      - open_issues_count
      - default_branch
      - score
      - forks_url
      - keys_url
      - collaborators_url
      - teams_url
      - hooks_url
      - issue_events_url
      - events_url
      - assignees_url
      - branches_url
      - tags_url
      - blobs_url
      - git_tags_url
      - git_refs_url
      - trees_url
      - statuses_url
      - languages_url
      - stargazers_url
      - contributors_url
      - subscribers_url
      - subscription_url
      - commits_url
      - git_commits_url
      - comments_url
      - issue_comment_url
      - contents_url
      - compare_url
      - merges_url
      - archive_url
      - downloads_url
      - issues_url
      - pulls_url
      - milestones_url
      - notifications_url
      - labels_url
      - releases_url
      - deployments_url
      - git_url
      - ssh_url
      - clone_url
      - svn_url
      - forks
      - open_issues
      - watchers
      - mirror_url
      - has_issues
      - has_projects
      - has_pages
      - has_wiki
      - has_downloads
      - archived
      - disabled
      - license
      minProperties: 74
  responses:
    validation_failed:
      description: Validation failed, or the endpoint has been spammed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error'
    not_modified:
      description: Not modified
    service_unavailable:
      description: Service unavailable
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
              documentation_url:
                type: string
            minProperties: 0
  parameters:
    per-page:
      name: per_page
      in: query
      schema:
        type: integer
        default: 30
      description: The number of results per page (max 100). For more information,
        see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
    page:
      name: page
      in: query
      schema:
        type: integer
        default: 1
      description: The page number of the results to fetch. For more information,
        see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
    order:
      name: order
      in: query
      schema:
        type: string
        enum:
        - desc
        - asc
        default: desc
      description: Determines whether the first search result returned is the highest
        number of matches (`desc`) or lowest number of matches (`asc`). This parameter
        is ignored unless you provide `sort`.
  examples:
    repo-search-result-item-paginated:
      value:
        incomplete_results: false
        total_count: 40
        items:
        - trees_url: https://api.github.com/repos/dtrupenn/Tetris/git/trees{/sha}
          master_branch: master
          issues_url: https://api.github.com/repos/dtrupenn/Tetris/issues{/number}
          git_commits_url: https://api.github.com/repos/dtrupenn/Tetris/git/commits{/sha}
          keys_url: https://api.github.com/repos/dtrupenn/Tetris/keys{/key_id}
          has_pages: true
          has_wiki: true
          events_url: https://api.github.com/repos/dtrupenn/Tetris/events
          blobs_url: https://api.github.com/repos/dtrupenn/Tetris/git/blobs{/sha}
          full_name: dtrupenn/Tetris
          issue_events_url: https://api.github.com/repos/dtrupenn/Tetris/issues/events{/number}
          forks: 1
          private: false
          pulls_url: https://api.github.com/repos/dtrupenn/Tetris/pulls{/number}
          score: 1
          language: Assembly
          forks_url: https://api.github.com/repos/dtrupenn/Tetris/forks
          archived: true
          compare_url: https://api.github.com/repos/dtrupenn/Tetris/compare/{base}...{head}
          branches_url: https://api.github.com/repos/dtrupenn/Tetris/branches{/branch}
          id: 3081286
          ssh_url: git@github.com:dtrupenn/Tetris.git
          comments_url: https://api.github.com/repos/dtrupenn/Tetris/comments{/number}
          subscription_url: https://api.github.com/repos/dtrupenn/Tetris/subscription
          hooks_url: https://api.github.com/repos/dtrupenn/Tetris/hooks
          description: A C implementation of Tetris using Pennsim through LC4
          git_refs_url: https://api.github.com/repos/dtrupenn/Tetris/git/refs{/sha}
          git_url: git:github.com/dtrupenn/Tetris.git
          contributors_url: https://api.github.com/repos/dtrupenn/Tetris/contributors
          tags_url: https://api.github.com/repos/dtrupenn/Tetris/tags
          labels_url: https://api.github.com/repos/dtrupenn/Tetris/labels{/name}
          html_url: https://github.com/dtrupenn/Tetris
          mirror_url: git:git.example.com/dtrupenn/Tetris
          pushed_at: '2012-01-01T00:37:02Z'
          url: https://api.github.com/repos/dtrupenn/Tetris
          has_downloads: true
          languages_url: https://api.github.com/repos/dtrupenn/Tetris/languages
          disabled: true
          forks_count: 0
          deployments_url: https://api.github.com/repos/dtrupenn/Tetris/deployments
          statuses_url: https://api.github.com/repos/dtrupenn/Tetris/statuses/{sha}
          notifications_url: https://api.github.com/repos/dtrupenn/Tetris/notifications{?since,all,participating}
          created_at: '2012-01-01T00:31:50Z'
          commits_url: https://api.github.com/repos/dtrupenn/Tetris/commits{/sha}
          license:
            key: mit
            node_id: MDc6TGljZW5zZW1pdA==
            name: MIT License
            html_url: https://api.github.com/licenses/mit
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
          name: Tetris
          milestones_url: https://api.github.com/repos/dtrupenn/Tetris/milestones{/number}
          svn_url: https://svn.github.com/dtrupenn/Tetris
          clone_url: https://github.com/dtrupenn/Tetris.git
          stargazers_count: 1
          open_issues: 1
          owner:
            repos_url: https://api.github.com/users/octocat/repos
            url: https://api.github.com/users/dtrupenn
            followers_url: https://api.github.com/users/octocat/followers
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            received_events_url: https://api.github.com/users/dtrupenn/received_events
            events_url: https://api.github.com/users/octocat/events{/privacy}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            html_url: https://github.com/octocat
            id: 872147
            gravatar_id: ''
            login: dtrupenn
            avatar_url: https://secure.gravatar.com/avatar/e7956084e75f239de85d3a31bc172ace?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            organizations_url: https://api.github.com/users/octocat/orgs
            type: User
            following_url: https://api.github.com/users/octocat/following{/other_user}
            node_id: MDQ6VXNlcjg3MjE0Nw==
            site_admin: true
          has_issues: true
          teams_url: https://api.github.com/repos/dtrupenn/Tetris/teams
          collaborators_url: https://api.github.com/repos/dtrupenn/Tetris/collaborators{/collaborator}
          archive_url: https://api.github.com/repos/dtrupenn/Tetris/{archive_format}{/ref}
          has_projects: true
          homepage: https://github.com
          downloads_url: https://api.github.com/repos/dtrupenn/Tetris/downloads
          open_issues_count: 0
          contents_url: https://api.github.com/repos/dtrupenn/Tetris/contents/{+path}
          default_branch: master
          fork: false
          stargazers_url: https://api.github.com/repos/dtrupenn/Tetris/stargazers
          watchers_count: 1
          size: 524
          releases_url: https://api.github.com/repos/dtrupenn/Tetris/releases{/id}
          git_tags_url: https://api.github.com/repos/dtrupenn/Tetris/git/tags{/sha}
          assignees_url: https://api.github.com/repos/dtrupenn/Tetris/assignees{/user}
          watchers: 1
          node_id: MDEwOlJlcG9zaXRvcnkzMDgxMjg2
          issue_comment_url: https://api.github.com/repos/dtrupenn/Tetris/issues/comments{/number}
          merges_url: https://api.github.com/repos/dtrupenn/Tetris/merges
          subscribers_url: https://api.github.com/repos/dtrupenn/Tetris/subscribers
          visibility: private
          updated_at: '2013-01-05T17:58:47Z'
